状态 4conflicts: 1 shift/reduce
状态 11conflicts: 1 shift/reduce
状态 12conflicts: 1 shift/reduce
状态 15conflicts: 1 shift/reduce
状态 46conflicts: 1 shift/reduce
状态 50conflicts: 1 shift/reduce
状态 96conflicts: 3 reduce/reduce
状态 146conflicts: 2 reduce/reduce
状态 189conflicts: 5 reduce/reduce
状态 306conflicts: 3 reduce/reduce
状态 376conflicts: 1 shift/reduce


语法

    0 $accept: translation_unit $end

    1 primary_expr: identifier
    2             | const_int
    3             | const_char
    4             | const_float
    5             | string_literal
    6             | '(' expr ')'

    7 postfix_expr: primary_expr
    8             | postfix_expr '[' expr ']'
    9             | postfix_expr '(' ')'
   10             | postfix_expr '(' argument_expr_list ')'
   11             | postfix_expr '.' identifier
   12             | postfix_expr op_ptr identifier
   13             | postfix_expr op_pp
   14             | postfix_expr op_dd
   15             | '(' type_name ')' '{' init_list '}'
   16             | '(' type_name ')' '{' init_list ',' '}'

   17 argument_expr_list: assignment_expr
   18                   | argument_expr_list ',' assignment_expr

   19 unary_expr: postfix_expr
   20           | op_pp unary_expr
   21           | op_dd unary_expr
   22           | op_unary cast_expr
   23           | SIZEOF unary_expr
   24           | SIZEOF '(' type_name ')'

   25 op_unary: '&'
   26         | '*'
   27         | '+'
   28         | '-'
   29         | '~'
   30         | '!'

   31 cast_expr: unary_expr
   32          | '(' type_name ')' cast_expr

   33 multiplicative_expr: cast_expr
   34                    | multiplicative_expr '*' cast_expr
   35                    | multiplicative_expr '/' cast_expr
   36                    | multiplicative_expr '%' cast_expr

   37 additive_expr: multiplicative_expr
   38              | additive_expr '+' multiplicative_expr
   39              | additive_expr '-' multiplicative_expr

   40 shift_expr: additive_expr
   41           | shift_expr op_lshift additive_expr
   42           | shift_expr op_rshift additive_expr

   43 relational_expr: shift_expr
   44                | relational_expr '<' shift_expr
   45                | relational_expr '>' shift_expr
   46                | relational_expr op_le shift_expr
   47                | relational_expr op_ge shift_expr

   48 equality_expr: relational_expr
   49              | equality_expr op_eq relational_expr
   50              | equality_expr op_ne relational_expr

   51 AND_expr: equality_expr
   52         | AND_expr '&' equality_expr

   53 ex_OR_expr: AND_expr
   54           | ex_OR_expr '^' AND_expr

   55 in_OR_expr: ex_OR_expr
   56           | in_OR_expr '|' ex_OR_expr

   57 logical_AND_expr: in_OR_expr
   58                 | logical_AND_expr op_and in_OR_expr

   59 logical_OR_expr: logical_AND_expr
   60                | logical_OR_expr op_or logical_AND_expr

   61 conditional_expr: logical_OR_expr
   62                 | logical_OR_expr '?' expr ':' conditional_expr

   63 assignment_expr: conditional_expr
   64                | unary_expr op_assign assignment_expr

   65 expr: assignment_expr
   66     | expr ',' assignment_expr

   67 constant_expr: conditional_expr

   68 declaration: declaration_spec ';'
   69            | declaration_spec init_declarator_list ';'

   70 declaration_spec: storage_class_spec
   71                 | storage_class_spec declaration_spec
   72                 | type_spec
   73                 | type_spec declaration_spec
   74                 | type_qualifier
   75                 | type_qualifier declaration_spec
   76                 | func_spec
   77                 | func_spec declaration_spec

   78 init_declarator_list: init_declarator
   79                     | init_declarator_list ',' init_declarator

   80 init_declarator: declarator
   81                | declarator '=' initializer

   82 storage_class_spec: STATIC
   83                   | storage_class_specifier

   84 type_spec: type_specifier
   85          | struct_or_union_spec
   86          | enum_spec
   87          | typedef_name

   88 struct_or_union_spec: struct_or_union '{' struct_declaration_list '}'
   89                     | struct_or_union identifier '{' struct_declaration_list '}'
   90                     | struct_or_union identifier

   91 struct_declaration_list: struct_declaration
   92                        | struct_declaration_list struct_declaration

   93 struct_declaration: spec_qual_list struct_declarator_list ';'

   94 spec_qual_list: type_spec
   95               | type_spec spec_qual_list
   96               | type_qual
   97               | type_qual spec_qual_list

   98 struct_declarator_list: struct_declarator
   99                       | struct_declarator_list ',' struct_declarator

  100 struct_declarator: declarator
  101                  | ':' constant_expr
  102                  | declarator ':' constant_expr

  103 enum_spec: ENUM '{' enum_list '}'
  104          | ENUM identifier '{' enum_list '}'
  105          | ENUM '{' enum_list ',' '}'
  106          | ENUM identifier '{' enum_list ',' '}'
  107          | ENUM identifier

  108 enum_list: enumerator
  109          | enum_list ',' enumerator

  110 enumerator: enum_constant
  111           | enum_constant '=' constant_expr

  112 enum_constant: identifier

  113 type_qual: type_qualifier

  114 func_spec: INLINE

  115 declarator: direct_declarator
  116           | pointer direct_declarator

  117 direct_declarator: identifier
  118                  | '(' declarator ')'
  119                  | direct_declarator '[' ']'
  120                  | direct_declarator '[' type_qual_list ']'
  121                  | direct_declarator '[' assignment_expr ']'
  122                  | direct_declarator '[' type_qual_list assignment_expr ']'
  123                  | direct_declarator '[' STATIC assignment_expr ']'
  124                  | direct_declarator '[' STATIC type_qual_list assignment_expr ']'
  125                  | direct_declarator '[' type_qual_list STATIC assignment_expr ']'
  126                  | direct_declarator '[' '*' ']'
  127                  | direct_declarator '[' type_qual_list '*' ']'
  128                  | direct_declarator '(' para_type_list ')'
  129                  | direct_declarator '(' identifier_list ')'
  130                  | direct_declarator '(' ')'

  131 pointer: '*'
  132        | '*' type_qual_list
  133        | '*' pointer
  134        | '*' type_qual_list pointer

  135 type_qual_list: type_qual
  136               | type_qual_list type_qual

  137 para_type_list: para_list
  138               | para_list ',' ellipsis

  139 para_list: para_declaration
  140          | para_list ',' para_declaration

  141 para_declaration: declaration_spec declarator
  142                 | declaration_spec
  143                 | declaration_spec abstract_declarator

  144 identifier_list: identifier
  145                | identifier_list ',' identifier

  146 type_name: spec_qual_list
  147          | spec_qual_list abstract_declarator

  148 abstract_declarator: pointer
  149                    | direct_abstract_declarator
  150                    | pointer direct_abstract_declarator

  151 direct_abstract_declarator: '(' abstract_declarator ')'
  152                           | '[' ']'
  153                           | direct_abstract_declarator '[' ']'
  154                           | '[' type_qual_list ']'
  155                           | '[' assignment_expr ']'
  156                           | direct_abstract_declarator '[' type_qual_list ']'
  157                           | direct_abstract_declarator '[' assignment_expr ']'
  158                           | '[' type_qual_list assignment_expr ']'
  159                           | direct_abstract_declarator '[' type_qual_list assignment_expr ']'
  160                           | '[' STATIC assignment_expr ']'
  161                           | direct_abstract_declarator '[' STATIC assignment_expr ']'
  162                           | '[' STATIC type_qual_list assignment_expr ']'
  163                           | direct_abstract_declarator '[' STATIC type_qual_list assignment_expr ']'
  164                           | '[' type_qual_list STATIC assignment_expr ']'
  165                           | direct_abstract_declarator '[' type_qual_list STATIC assignment_expr ']'
  166                           | '[' '*' ']'
  167                           | direct_abstract_declarator '[' '*' ']'
  168                           | direct_abstract_declarator '(' para_type_list ')'
  169                           | direct_abstract_declarator '(' ')'
  170                           | '(' para_type_list ')'
  171                           | '(' ')'

  172 typedef_name: identifier

  173 initializer: assignment_expr
  174            | '{' init_list '}'
  175            | '{' init_list ',' '}'

  176 init_list: initializer
  177          | designation initializer
  178          | init_list ',' initializer
  179          | init_list ',' designation initializer

  180 designation: designator_list '='

  181 designator_list: designator
  182                | designator_list designator

  183 designator: '[' constant_expr ']'
  184           | '.' identifier

  185 statement: labeled_statement
  186          | compound_statement
  187          | expr_statement
  188          | selection_statement
  189          | iteration_statement
  190          | jump_statement

  191 labeled_statement: identifier ':' statement
  192                  | CASE constant_expr ':' statement
  193                  | DEFAULT ':' statement

  194 compound_statement: '{' '}'
  195                   | '{' block_item_list '}'

  196 block_item_list: block_item
  197                | block_item_list block_item

  198 block_item: declaration
  199           | statement

  200 expr_statement: ';'
  201               | expr ';'

  202 selection_statement: IF '(' expr ')' statement
  203                    | IF '(' expr ')' statement ELSE statement
  204                    | SWITCH '(' expr ')' statement

  205 iteration_statement: WHILE '(' expr ')' statement
  206                    | DO statement WHILE '(' expr ')' ';'
  207                    | FOR '(' ')' statement
  208                    | FOR '(' expr ';' ';' ')' statement
  209                    | FOR '(' ';' expr ';' ')' statement
  210                    | FOR '(' ';' ';' expr ')' statement
  211                    | FOR '(' expr ';' expr ';' ')' statement
  212                    | FOR '(' expr ';' ';' expr ')' statement
  213                    | FOR '(' ';' expr ';' expr ')' statement
  214                    | FOR '(' expr ';' expr ';' expr ')' statement
  215                    | FOR '(' declaration ';' ')' statement
  216                    | FOR '(' declaration expr ';' ')' statement
  217                    | FOR '(' declaration ';' expr ')' statement
  218                    | FOR '(' declaration expr ';' expr ')' statement

  219 jump_statement: GOTO identifier ';'
  220               | CONTINUE ';'
  221               | BREAK ';'
  222               | RETURN ';'
  223               | RETURN expr ';'

  224 translation_unit: external_declaration
  225                 | translation_unit external_declaration

  226 external_declaration: func_definition
  227                     | declaration

  228 func_definition: declaration_spec declarator compound_statement
  229                | declaration_spec declarator declaration_list compound_statement

  230 declaration_list: declaration
  231                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
'!' (33) 30
'%' (37) 36
'&' (38) 25 52
'(' (40) 6 9 10 15 16 24 32 118 128 129 130 151 168 169 170 171 202
    203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218
')' (41) 6 9 10 15 16 24 32 118 128 129 130 151 168 169 170 171 202
    203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218
'*' (42) 26 34 126 127 131 132 133 134 166 167
'+' (43) 27 38
',' (44) 16 18 66 79 99 105 106 109 138 140 145 175 178 179
'-' (45) 28 39
'.' (46) 11 184
'/' (47) 35
':' (58) 62 101 102 191 192 193
';' (59) 68 69 93 200 201 206 208 209 210 211 212 213 214 215 216 217
    218 219 220 221 222 223
'<' (60) 44
'=' (61) 81 111 180
'>' (62) 45
'?' (63) 62
'[' (91) 8 119 120 121 122 123 124 125 126 127 152 153 154 155 156
    157 158 159 160 161 162 163 164 165 166 167 183
']' (93) 8 119 120 121 122 123 124 125 126 127 152 153 154 155 156
    157 158 159 160 161 162 163 164 165 166 167 183
'^' (94) 54
'{' (123) 15 16 88 89 103 104 105 106 174 175 194 195
'|' (124) 56
'}' (125) 15 16 88 89 103 104 105 106 174 175 194 195
'~' (126) 29
error (256)
INLINE (258) 114
DO (259) 206
FOR (260) 207 208 209 210 211 212 213 214 215 216 217 218
WHILE (261) 205 206
BREAK (262) 221
CONTINUE (263) 220
GOTO (264) 219
RETURN (265) 222 223
IF (266) 202 203
ELSE (267) 203
SWITCH (268) 204
ENUM (269) 103 104 105 106 107
CASE (270) 192
DEFAULT (271) 193
STATIC (272) 82 123 124 125 160 161 162 163 164 165
SIZEOF (273) 23 24
type_qualifier (274) 74 75 113
storage_class_specifier (275) 83
type_specifier (276) 84
struct_or_union (277) 88 89 90
identifier (278) 1 11 12 89 90 104 106 107 112 117 144 145 172 184
    191 219
const_int (279) 2
const_char (280) 3
const_float (281) 4
string_literal (282) 5
ellipsis (283) 138
op_assign (284) 64
op_and (285) 58
op_or (286) 60
op_eq (287) 49
op_ne (288) 50
op_le (289) 46
op_ge (290) 47
op_lshift (291) 41
op_rshift (292) 42
op_ptr (293) 12
op_pp (294) 13 20
op_dd (295) 14 21


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
primary_expr (66)
    on left: 1 2 3 4 5 6, on right: 7
postfix_expr (67)
    on left: 7 8 9 10 11 12 13 14 15 16, on right: 8 9 10 11 12 13
    14 19
argument_expr_list (68)
    on left: 17 18, on right: 10 18
unary_expr (69)
    on left: 19 20 21 22 23 24, on right: 20 21 23 31 64
op_unary (70)
    on left: 25 26 27 28 29 30, on right: 22
cast_expr (71)
    on left: 31 32, on right: 22 32 33 34 35 36
multiplicative_expr (72)
    on left: 33 34 35 36, on right: 34 35 36 37 38 39
additive_expr (73)
    on left: 37 38 39, on right: 38 39 40 41 42
shift_expr (74)
    on left: 40 41 42, on right: 41 42 43 44 45 46 47
relational_expr (75)
    on left: 43 44 45 46 47, on right: 44 45 46 47 48 49 50
equality_expr (76)
    on left: 48 49 50, on right: 49 50 51 52
AND_expr (77)
    on left: 51 52, on right: 52 53 54
ex_OR_expr (78)
    on left: 53 54, on right: 54 55 56
in_OR_expr (79)
    on left: 55 56, on right: 56 57 58
logical_AND_expr (80)
    on left: 57 58, on right: 58 59 60
logical_OR_expr (81)
    on left: 59 60, on right: 60 61 62
conditional_expr (82)
    on left: 61 62, on right: 62 63 67
assignment_expr (83)
    on left: 63 64, on right: 17 18 64 65 66 121 122 123 124 125 155
    157 158 159 160 161 162 163 164 165 173
expr (84)
    on left: 65 66, on right: 6 8 62 66 201 202 203 204 205 206 208
    209 210 211 212 213 214 216 217 218 223
constant_expr (85)
    on left: 67, on right: 101 102 111 183 192
declaration (86)
    on left: 68 69, on right: 198 215 216 217 218 227 230 231
declaration_spec (87)
    on left: 70 71 72 73 74 75 76 77, on right: 68 69 71 73 75 77 141
    142 143 228 229
init_declarator_list (88)
    on left: 78 79, on right: 69 79
init_declarator (89)
    on left: 80 81, on right: 78 79
storage_class_spec (90)
    on left: 82 83, on right: 70 71
type_spec (91)
    on left: 84 85 86 87, on right: 72 73 94 95
struct_or_union_spec (92)
    on left: 88 89 90, on right: 85
struct_declaration_list (93)
    on left: 91 92, on right: 88 89 92
struct_declaration (94)
    on left: 93, on right: 91 92
spec_qual_list (95)
    on left: 94 95 96 97, on right: 93 95 97 146 147
struct_declarator_list (96)
    on left: 98 99, on right: 93 99
struct_declarator (97)
    on left: 100 101 102, on right: 98 99
enum_spec (98)
    on left: 103 104 105 106 107, on right: 86
enum_list (99)
    on left: 108 109, on right: 103 104 105 106 109
enumerator (100)
    on left: 110 111, on right: 108 109
enum_constant (101)
    on left: 112, on right: 110 111
type_qual (102)
    on left: 113, on right: 96 97 135 136
func_spec (103)
    on left: 114, on right: 76 77
declarator (104)
    on left: 115 116, on right: 80 81 100 102 118 141 228 229
direct_declarator (105)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128 129 130,
    on right: 115 116 119 120 121 122 123 124 125 126 127 128 129 130
pointer (106)
    on left: 131 132 133 134, on right: 116 133 134 148 150
type_qual_list (107)
    on left: 135 136, on right: 120 122 124 125 127 132 134 136 154
    156 158 159 162 163 164 165
para_type_list (108)
    on left: 137 138, on right: 128 168 170
para_list (109)
    on left: 139 140, on right: 137 138 140
para_declaration (110)
    on left: 141 142 143, on right: 139 140
identifier_list (111)
    on left: 144 145, on right: 129 145
type_name (112)
    on left: 146 147, on right: 15 16 24 32
abstract_declarator (113)
    on left: 148 149 150, on right: 143 147 151
direct_abstract_declarator (114)
    on left: 151 152 153 154 155 156 157 158 159 160 161 162 163 164
    165 166 167 168 169 170 171, on right: 149 150 153 156 157 159
    161 163 165 167 168 169
typedef_name (115)
    on left: 172, on right: 87
initializer (116)
    on left: 173 174 175, on right: 81 176 177 178 179
init_list (117)
    on left: 176 177 178 179, on right: 15 16 174 175 178 179
designation (118)
    on left: 180, on right: 177 179
designator_list (119)
    on left: 181 182, on right: 180 182
designator (120)
    on left: 183 184, on right: 181 182
statement (121)
    on left: 185 186 187 188 189 190, on right: 191 192 193 199 202
    203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218
labeled_statement (122)
    on left: 191 192 193, on right: 185
compound_statement (123)
    on left: 194 195, on right: 186 228 229
block_item_list (124)
    on left: 196 197, on right: 195 197
block_item (125)
    on left: 198 199, on right: 196 197
expr_statement (126)
    on left: 200 201, on right: 187
selection_statement (127)
    on left: 202 203 204, on right: 188
iteration_statement (128)
    on left: 205 206 207 208 209 210 211 212 213 214 215 216 217 218,
    on right: 189
jump_statement (129)
    on left: 219 220 221 222 223, on right: 190
translation_unit (130)
    on left: 224 225, on right: 0 225
external_declaration (131)
    on left: 226 227, on right: 224 225
func_definition (132)
    on left: 228 229, on right: 226
declaration_list (133)
    on left: 230 231, on right: 229 231


State 0

    0 $accept: . translation_unit $end
   68 declaration: . declaration_spec ';'
   69            | . declaration_spec init_declarator_list ';'
   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  172 typedef_name: . identifier
  224 translation_unit: . external_declaration
  225                 | . translation_unit external_declaration
  226 external_declaration: . func_definition
  227                     | . declaration
  228 func_definition: . declaration_spec declarator compound_statement
  229                | . declaration_spec declarator declaration_list compound_statement

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 8

    declaration           转到状态 9
    declaration_spec      转到状态 10
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    typedef_name          转到状态 16
    translation_unit      转到状态 17
    external_declaration  转到状态 18
    func_definition       转到状态 19


State 1

  114 func_spec: INLINE .

    $default  reduce using rule 114 (func_spec)


State 2

  103 enum_spec: ENUM . '{' enum_list '}'
  104          | ENUM . identifier '{' enum_list '}'
  105          | ENUM . '{' enum_list ',' '}'
  106          | ENUM . identifier '{' enum_list ',' '}'
  107          | ENUM . identifier

    identifier  shift, and go to state 20
    '{'         shift, and go to state 21


State 3

   82 storage_class_spec: STATIC .

    $default  reduce using rule 82 (storage_class_spec)


State 4

   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   74                 | type_qualifier .  [identifier, '*', '(', ')', '[', ',', ';']
   75                 | . type_qualifier declaration_spec
   75                 | type_qualifier . declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  172 typedef_name: . identifier

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 8

    identifier  [reduce using rule 74 (declaration_spec)]
    $default    reduce using rule 74 (declaration_spec)

    declaration_spec      转到状态 22
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    typedef_name          转到状态 16


State 5

   83 storage_class_spec: storage_class_specifier .

    $default  reduce using rule 83 (storage_class_spec)


State 6

   84 type_spec: type_specifier .

    $default  reduce using rule 84 (type_spec)


State 7

   88 struct_or_union_spec: struct_or_union . '{' struct_declaration_list '}'
   89                     | struct_or_union . identifier '{' struct_declaration_list '}'
   90                     | struct_or_union . identifier

    identifier  shift, and go to state 23
    '{'         shift, and go to state 24


State 8

  172 typedef_name: identifier .

    $default  reduce using rule 172 (typedef_name)


State 9

  227 external_declaration: declaration .

    $default  reduce using rule 227 (external_declaration)


State 10

   68 declaration: declaration_spec . ';'
   69            | declaration_spec . init_declarator_list ';'
   78 init_declarator_list: . init_declarator
   79                     | . init_declarator_list ',' init_declarator
   80 init_declarator: . declarator
   81                | . declarator '=' initializer
  115 declarator: . direct_declarator
  116           | . pointer direct_declarator
  117 direct_declarator: . identifier
  118                  | . '(' declarator ')'
  119                  | . direct_declarator '[' ']'
  120                  | . direct_declarator '[' type_qual_list ']'
  121                  | . direct_declarator '[' assignment_expr ']'
  122                  | . direct_declarator '[' type_qual_list assignment_expr ']'
  123                  | . direct_declarator '[' STATIC assignment_expr ']'
  124                  | . direct_declarator '[' STATIC type_qual_list assignment_expr ']'
  125                  | . direct_declarator '[' type_qual_list STATIC assignment_expr ']'
  126                  | . direct_declarator '[' '*' ']'
  127                  | . direct_declarator '[' type_qual_list '*' ']'
  128                  | . direct_declarator '(' para_type_list ')'
  129                  | . direct_declarator '(' identifier_list ')'
  130                  | . direct_declarator '(' ')'
  131 pointer: . '*'
  132        | . '*' type_qual_list
  133        | . '*' pointer
  134        | . '*' type_qual_list pointer
  228 func_definition: declaration_spec . declarator compound_statement
  229                | declaration_spec . declarator declaration_list compound_statement

    identifier  shift, and go to state 25
    '*'         shift, and go to state 26
    '('         shift, and go to state 27
    ';'         shift, and go to state 28

    init_declarator_list  转到状态 29
    init_declarator       转到状态 30
    declarator            转到状态 31
    direct_declarator     转到状态 32
    pointer               转到状态 33


State 11

   70 declaration_spec: . storage_class_spec
   70                 | storage_class_spec .  [identifier, '*', '(', ')', '[', ',', ';']
   71                 | . storage_class_spec declaration_spec
   71                 | storage_class_spec . declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  172 typedef_name: . identifier

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 8

    identifier  [reduce using rule 70 (declaration_spec)]
    $default    reduce using rule 70 (declaration_spec)

    declaration_spec      转到状态 34
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    typedef_name          转到状态 16


State 12

   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   72                 | type_spec .  [identifier, '*', '(', ')', '[', ',', ';']
   73                 | . type_spec declaration_spec
   73                 | type_spec . declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  172 typedef_name: . identifier

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 8

    identifier  [reduce using rule 72 (declaration_spec)]
    $default    reduce using rule 72 (declaration_spec)

    declaration_spec      转到状态 35
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    typedef_name          转到状态 16


State 13

   85 type_spec: struct_or_union_spec .

    $default  reduce using rule 85 (type_spec)


State 14

   86 type_spec: enum_spec .

    $default  reduce using rule 86 (type_spec)


State 15

   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   76                 | func_spec .  [identifier, '*', '(', ')', '[', ',', ';']
   77                 | . func_spec declaration_spec
   77                 | func_spec . declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  172 typedef_name: . identifier

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 8

    identifier  [reduce using rule 76 (declaration_spec)]
    $default    reduce using rule 76 (declaration_spec)

    declaration_spec      转到状态 36
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    typedef_name          转到状态 16


State 16

   87 type_spec: typedef_name .

    $default  reduce using rule 87 (type_spec)


State 17

    0 $accept: translation_unit . $end
   68 declaration: . declaration_spec ';'
   69            | . declaration_spec init_declarator_list ';'
   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  172 typedef_name: . identifier
  225 translation_unit: translation_unit . external_declaration
  226 external_declaration: . func_definition
  227                     | . declaration
  228 func_definition: . declaration_spec declarator compound_statement
  229                | . declaration_spec declarator declaration_list compound_statement

    $end                     shift, and go to state 37
    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 8

    declaration           转到状态 9
    declaration_spec      转到状态 10
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    typedef_name          转到状态 16
    external_declaration  转到状态 38
    func_definition       转到状态 19


State 18

  224 translation_unit: external_declaration .

    $default  reduce using rule 224 (translation_unit)


State 19

  226 external_declaration: func_definition .

    $default  reduce using rule 226 (external_declaration)


State 20

  104 enum_spec: ENUM identifier . '{' enum_list '}'
  106          | ENUM identifier . '{' enum_list ',' '}'
  107          | ENUM identifier .  [INLINE, ENUM, STATIC, type_qualifier, storage_class_specifier, type_specifier, struct_or_union, identifier, '*', '(', ')', '[', ',', ':', ';']

    '{'  shift, and go to state 39

    $default  reduce using rule 107 (enum_spec)


State 21

  103 enum_spec: ENUM '{' . enum_list '}'
  105          | ENUM '{' . enum_list ',' '}'
  108 enum_list: . enumerator
  109          | . enum_list ',' enumerator
  110 enumerator: . enum_constant
  111           | . enum_constant '=' constant_expr
  112 enum_constant: . identifier

    identifier  shift, and go to state 40

    enum_list      转到状态 41
    enumerator     转到状态 42
    enum_constant  转到状态 43


State 22

   75 declaration_spec: type_qualifier declaration_spec .

    $default  reduce using rule 75 (declaration_spec)


State 23

   89 struct_or_union_spec: struct_or_union identifier . '{' struct_declaration_list '}'
   90                     | struct_or_union identifier .  [INLINE, ENUM, STATIC, type_qualifier, storage_class_specifier, type_specifier, struct_or_union, identifier, '*', '(', ')', '[', ',', ':', ';']

    '{'  shift, and go to state 44

    $default  reduce using rule 90 (struct_or_union_spec)


State 24

   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   88                     | struct_or_union '{' . struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
   91 struct_declaration_list: . struct_declaration
   92                        | . struct_declaration_list struct_declaration
   93 struct_declaration: . spec_qual_list struct_declarator_list ';'
   94 spec_qual_list: . type_spec
   95               | . type_spec spec_qual_list
   96               | . type_qual
   97               | . type_qual spec_qual_list
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  113 type_qual: . type_qualifier
  172 typedef_name: . identifier

    ENUM             shift, and go to state 2
    type_qualifier   shift, and go to state 45
    type_specifier   shift, and go to state 6
    struct_or_union  shift, and go to state 7
    identifier       shift, and go to state 8

    type_spec                转到状态 46
    struct_or_union_spec     转到状态 13
    struct_declaration_list  转到状态 47
    struct_declaration       转到状态 48
    spec_qual_list           转到状态 49
    enum_spec                转到状态 14
    type_qual                转到状态 50
    typedef_name             转到状态 16


State 25

  117 direct_declarator: identifier .

    $default  reduce using rule 117 (direct_declarator)


State 26

  113 type_qual: . type_qualifier
  131 pointer: . '*'
  131        | '*' .  [identifier, '(', ')', '[', ',']
  132        | . '*' type_qual_list
  132        | '*' . type_qual_list
  133        | . '*' pointer
  133        | '*' . pointer
  134        | . '*' type_qual_list pointer
  134        | '*' . type_qual_list pointer
  135 type_qual_list: . type_qual
  136               | . type_qual_list type_qual

    type_qualifier  shift, and go to state 45
    '*'             shift, and go to state 26

    $default  reduce using rule 131 (pointer)

    type_qual       转到状态 51
    pointer         转到状态 52
    type_qual_list  转到状态 53


State 27

  115 declarator: . direct_declarator
  116           | . pointer direct_declarator
  117 direct_declarator: . identifier
  118                  | . '(' declarator ')'
  118                  | '(' . declarator ')'
  119                  | . direct_declarator '[' ']'
  120                  | . direct_declarator '[' type_qual_list ']'
  121                  | . direct_declarator '[' assignment_expr ']'
  122                  | . direct_declarator '[' type_qual_list assignment_expr ']'
  123                  | . direct_declarator '[' STATIC assignment_expr ']'
  124                  | . direct_declarator '[' STATIC type_qual_list assignment_expr ']'
  125                  | . direct_declarator '[' type_qual_list STATIC assignment_expr ']'
  126                  | . direct_declarator '[' '*' ']'
  127                  | . direct_declarator '[' type_qual_list '*' ']'
  128                  | . direct_declarator '(' para_type_list ')'
  129                  | . direct_declarator '(' identifier_list ')'
  130                  | . direct_declarator '(' ')'
  131 pointer: . '*'
  132        | . '*' type_qual_list
  133        | . '*' pointer
  134        | . '*' type_qual_list pointer

    identifier  shift, and go to state 25
    '*'         shift, and go to state 26
    '('         shift, and go to state 27

    declarator         转到状态 54
    direct_declarator  转到状态 32
    pointer            转到状态 33


State 28

   68 declaration: declaration_spec ';' .

    $default  reduce using rule 68 (declaration)


State 29

   69 declaration: declaration_spec init_declarator_list . ';'
   79 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 55
    ';'  shift, and go to state 56


State 30

   78 init_declarator_list: init_declarator .

    $default  reduce using rule 78 (init_declarator_list)


State 31

   68 declaration: . declaration_spec ';'
   69            | . declaration_spec init_declarator_list ';'
   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   80 init_declarator: declarator .  [',', ';']
   81                | declarator . '=' initializer
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  172 typedef_name: . identifier
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  228 func_definition: declaration_spec declarator . compound_statement
  229                | declaration_spec declarator . declaration_list compound_statement
  230 declaration_list: . declaration
  231                 | . declaration_list declaration

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 8
    '{'                      shift, and go to state 57
    '='                      shift, and go to state 58

    $default  reduce using rule 80 (init_declarator)

    declaration           转到状态 59
    declaration_spec      转到状态 60
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    typedef_name          转到状态 16
    compound_statement    转到状态 61
    declaration_list      转到状态 62


State 32

  115 declarator: direct_declarator .  [INLINE, ENUM, STATIC, type_qualifier, storage_class_specifier, type_specifier, struct_or_union, identifier, ')', '{', ',', ':', ';', '=']
  119 direct_declarator: direct_declarator . '[' ']'
  120                  | direct_declarator . '[' type_qual_list ']'
  121                  | direct_declarator . '[' assignment_expr ']'
  122                  | direct_declarator . '[' type_qual_list assignment_expr ']'
  123                  | direct_declarator . '[' STATIC assignment_expr ']'
  124                  | direct_declarator . '[' STATIC type_qual_list assignment_expr ']'
  125                  | direct_declarator . '[' type_qual_list STATIC assignment_expr ']'
  126                  | direct_declarator . '[' '*' ']'
  127                  | direct_declarator . '[' type_qual_list '*' ']'
  128                  | direct_declarator . '(' para_type_list ')'
  129                  | direct_declarator . '(' identifier_list ')'
  130                  | direct_declarator . '(' ')'

    '('  shift, and go to state 63
    '['  shift, and go to state 64

    $default  reduce using rule 115 (declarator)


State 33

  116 declarator: pointer . direct_declarator
  117 direct_declarator: . identifier
  118                  | . '(' declarator ')'
  119                  | . direct_declarator '[' ']'
  120                  | . direct_declarator '[' type_qual_list ']'
  121                  | . direct_declarator '[' assignment_expr ']'
  122                  | . direct_declarator '[' type_qual_list assignment_expr ']'
  123                  | . direct_declarator '[' STATIC assignment_expr ']'
  124                  | . direct_declarator '[' STATIC type_qual_list assignment_expr ']'
  125                  | . direct_declarator '[' type_qual_list STATIC assignment_expr ']'
  126                  | . direct_declarator '[' '*' ']'
  127                  | . direct_declarator '[' type_qual_list '*' ']'
  128                  | . direct_declarator '(' para_type_list ')'
  129                  | . direct_declarator '(' identifier_list ')'
  130                  | . direct_declarator '(' ')'

    identifier  shift, and go to state 25
    '('         shift, and go to state 27

    direct_declarator  转到状态 65


State 34

   71 declaration_spec: storage_class_spec declaration_spec .

    $default  reduce using rule 71 (declaration_spec)


State 35

   73 declaration_spec: type_spec declaration_spec .

    $default  reduce using rule 73 (declaration_spec)


State 36

   77 declaration_spec: func_spec declaration_spec .

    $default  reduce using rule 77 (declaration_spec)


State 37

    0 $accept: translation_unit $end .

    $default  接受


State 38

  225 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 225 (translation_unit)


State 39

  104 enum_spec: ENUM identifier '{' . enum_list '}'
  106          | ENUM identifier '{' . enum_list ',' '}'
  108 enum_list: . enumerator
  109          | . enum_list ',' enumerator
  110 enumerator: . enum_constant
  111           | . enum_constant '=' constant_expr
  112 enum_constant: . identifier

    identifier  shift, and go to state 40

    enum_list      转到状态 66
    enumerator     转到状态 42
    enum_constant  转到状态 43


State 40

  112 enum_constant: identifier .

    $default  reduce using rule 112 (enum_constant)


State 41

  103 enum_spec: ENUM '{' enum_list . '}'
  105          | ENUM '{' enum_list . ',' '}'
  109 enum_list: enum_list . ',' enumerator

    '}'  shift, and go to state 67
    ','  shift, and go to state 68


State 42

  108 enum_list: enumerator .

    $default  reduce using rule 108 (enum_list)


State 43

  110 enumerator: enum_constant .  ['}', ',']
  111           | enum_constant . '=' constant_expr

    '='  shift, and go to state 69

    $default  reduce using rule 110 (enumerator)


State 44

   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   89                     | struct_or_union identifier '{' . struct_declaration_list '}'
   90                     | . struct_or_union identifier
   91 struct_declaration_list: . struct_declaration
   92                        | . struct_declaration_list struct_declaration
   93 struct_declaration: . spec_qual_list struct_declarator_list ';'
   94 spec_qual_list: . type_spec
   95               | . type_spec spec_qual_list
   96               | . type_qual
   97               | . type_qual spec_qual_list
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  113 type_qual: . type_qualifier
  172 typedef_name: . identifier

    ENUM             shift, and go to state 2
    type_qualifier   shift, and go to state 45
    type_specifier   shift, and go to state 6
    struct_or_union  shift, and go to state 7
    identifier       shift, and go to state 8

    type_spec                转到状态 46
    struct_or_union_spec     转到状态 13
    struct_declaration_list  转到状态 70
    struct_declaration       转到状态 48
    spec_qual_list           转到状态 49
    enum_spec                转到状态 14
    type_qual                转到状态 50
    typedef_name             转到状态 16


State 45

  113 type_qual: type_qualifier .

    $default  reduce using rule 113 (type_qual)


State 46

   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
   94 spec_qual_list: . type_spec
   94               | type_spec .  [identifier, '*', '(', ')', '[', ':']
   95               | . type_spec spec_qual_list
   95               | type_spec . spec_qual_list
   96               | . type_qual
   97               | . type_qual spec_qual_list
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  113 type_qual: . type_qualifier
  172 typedef_name: . identifier

    ENUM             shift, and go to state 2
    type_qualifier   shift, and go to state 45
    type_specifier   shift, and go to state 6
    struct_or_union  shift, and go to state 7
    identifier       shift, and go to state 8

    identifier  [reduce using rule 94 (spec_qual_list)]
    $default    reduce using rule 94 (spec_qual_list)

    type_spec             转到状态 46
    struct_or_union_spec  转到状态 13
    spec_qual_list        转到状态 71
    enum_spec             转到状态 14
    type_qual             转到状态 50
    typedef_name          转到状态 16


State 47

   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   88                     | struct_or_union '{' struct_declaration_list . '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
   92 struct_declaration_list: struct_declaration_list . struct_declaration
   93 struct_declaration: . spec_qual_list struct_declarator_list ';'
   94 spec_qual_list: . type_spec
   95               | . type_spec spec_qual_list
   96               | . type_qual
   97               | . type_qual spec_qual_list
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  113 type_qual: . type_qualifier
  172 typedef_name: . identifier

    ENUM             shift, and go to state 2
    type_qualifier   shift, and go to state 45
    type_specifier   shift, and go to state 6
    struct_or_union  shift, and go to state 7
    identifier       shift, and go to state 8
    '}'              shift, and go to state 72

    type_spec             转到状态 46
    struct_or_union_spec  转到状态 13
    struct_declaration    转到状态 73
    spec_qual_list        转到状态 49
    enum_spec             转到状态 14
    type_qual             转到状态 50
    typedef_name          转到状态 16


State 48

   91 struct_declaration_list: struct_declaration .

    $default  reduce using rule 91 (struct_declaration_list)


State 49

   93 struct_declaration: spec_qual_list . struct_declarator_list ';'
   98 struct_declarator_list: . struct_declarator
   99                       | . struct_declarator_list ',' struct_declarator
  100 struct_declarator: . declarator
  101                  | . ':' constant_expr
  102                  | . declarator ':' constant_expr
  115 declarator: . direct_declarator
  116           | . pointer direct_declarator
  117 direct_declarator: . identifier
  118                  | . '(' declarator ')'
  119                  | . direct_declarator '[' ']'
  120                  | . direct_declarator '[' type_qual_list ']'
  121                  | . direct_declarator '[' assignment_expr ']'
  122                  | . direct_declarator '[' type_qual_list assignment_expr ']'
  123                  | . direct_declarator '[' STATIC assignment_expr ']'
  124                  | . direct_declarator '[' STATIC type_qual_list assignment_expr ']'
  125                  | . direct_declarator '[' type_qual_list STATIC assignment_expr ']'
  126                  | . direct_declarator '[' '*' ']'
  127                  | . direct_declarator '[' type_qual_list '*' ']'
  128                  | . direct_declarator '(' para_type_list ')'
  129                  | . direct_declarator '(' identifier_list ')'
  130                  | . direct_declarator '(' ')'
  131 pointer: . '*'
  132        | . '*' type_qual_list
  133        | . '*' pointer
  134        | . '*' type_qual_list pointer

    identifier  shift, and go to state 25
    '*'         shift, and go to state 26
    '('         shift, and go to state 27
    ':'         shift, and go to state 74

    struct_declarator_list  转到状态 75
    struct_declarator       转到状态 76
    declarator              转到状态 77
    direct_declarator       转到状态 32
    pointer                 转到状态 33


State 50

   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
   94 spec_qual_list: . type_spec
   95               | . type_spec spec_qual_list
   96               | . type_qual
   96               | type_qual .  [identifier, '*', '(', ')', '[', ':']
   97               | . type_qual spec_qual_list
   97               | type_qual . spec_qual_list
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  113 type_qual: . type_qualifier
  172 typedef_name: . identifier

    ENUM             shift, and go to state 2
    type_qualifier   shift, and go to state 45
    type_specifier   shift, and go to state 6
    struct_or_union  shift, and go to state 7
    identifier       shift, and go to state 8

    identifier  [reduce using rule 96 (spec_qual_list)]
    $default    reduce using rule 96 (spec_qual_list)

    type_spec             转到状态 46
    struct_or_union_spec  转到状态 13
    spec_qual_list        转到状态 78
    enum_spec             转到状态 14
    type_qual             转到状态 50
    typedef_name          转到状态 16


State 51

  135 type_qual_list: type_qual .

    $default  reduce using rule 135 (type_qual_list)


State 52

  133 pointer: '*' pointer .

    $default  reduce using rule 133 (pointer)


State 53

  113 type_qual: . type_qualifier
  131 pointer: . '*'
  132        | . '*' type_qual_list
  132        | '*' type_qual_list .  [identifier, '(', ')', '[', ',']
  133        | . '*' pointer
  134        | . '*' type_qual_list pointer
  134        | '*' type_qual_list . pointer
  136 type_qual_list: type_qual_list . type_qual

    type_qualifier  shift, and go to state 45
    '*'             shift, and go to state 26

    $default  reduce using rule 132 (pointer)

    type_qual  转到状态 79
    pointer    转到状态 80


State 54

  118 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 81


State 55

   79 init_declarator_list: init_declarator_list ',' . init_declarator
   80 init_declarator: . declarator
   81                | . declarator '=' initializer
  115 declarator: . direct_declarator
  116           | . pointer direct_declarator
  117 direct_declarator: . identifier
  118                  | . '(' declarator ')'
  119                  | . direct_declarator '[' ']'
  120                  | . direct_declarator '[' type_qual_list ']'
  121                  | . direct_declarator '[' assignment_expr ']'
  122                  | . direct_declarator '[' type_qual_list assignment_expr ']'
  123                  | . direct_declarator '[' STATIC assignment_expr ']'
  124                  | . direct_declarator '[' STATIC type_qual_list assignment_expr ']'
  125                  | . direct_declarator '[' type_qual_list STATIC assignment_expr ']'
  126                  | . direct_declarator '[' '*' ']'
  127                  | . direct_declarator '[' type_qual_list '*' ']'
  128                  | . direct_declarator '(' para_type_list ')'
  129                  | . direct_declarator '(' identifier_list ')'
  130                  | . direct_declarator '(' ')'
  131 pointer: . '*'
  132        | . '*' type_qual_list
  133        | . '*' pointer
  134        | . '*' type_qual_list pointer

    identifier  shift, and go to state 25
    '*'         shift, and go to state 26
    '('         shift, and go to state 27

    init_declarator    转到状态 82
    declarator         转到状态 83
    direct_declarator  转到状态 32
    pointer            转到状态 33


State 56

   69 declaration: declaration_spec init_declarator_list ';' .

    $default  reduce using rule 69 (declaration)


State 57

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
   68 declaration: . declaration_spec ';'
   69            | . declaration_spec init_declarator_list ';'
   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  172 typedef_name: . identifier
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  194                   | '{' . '}'
  195                   | . '{' block_item_list '}'
  195                   | '{' . block_item_list '}'
  196 block_item_list: . block_item
  197                | . block_item_list block_item
  198 block_item: . declaration
  199           | . statement
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    INLINE                   shift, and go to state 1
    DO                       shift, and go to state 84
    FOR                      shift, and go to state 85
    WHILE                    shift, and go to state 86
    BREAK                    shift, and go to state 87
    CONTINUE                 shift, and go to state 88
    GOTO                     shift, and go to state 89
    RETURN                   shift, and go to state 90
    IF                       shift, and go to state 91
    SWITCH                   shift, and go to state 92
    ENUM                     shift, and go to state 2
    CASE                     shift, and go to state 93
    DEFAULT                  shift, and go to state 94
    STATIC                   shift, and go to state 3
    SIZEOF                   shift, and go to state 95
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 96
    const_int                shift, and go to state 97
    const_char               shift, and go to state 98
    const_float              shift, and go to state 99
    string_literal           shift, and go to state 100
    op_pp                    shift, and go to state 101
    op_dd                    shift, and go to state 102
    '+'                      shift, and go to state 103
    '-'                      shift, and go to state 104
    '*'                      shift, and go to state 105
    '('                      shift, and go to state 106
    '{'                      shift, and go to state 57
    '}'                      shift, and go to state 107
    '&'                      shift, and go to state 108
    '~'                      shift, and go to state 109
    '!'                      shift, and go to state 110
    ';'                      shift, and go to state 111

    primary_expr          转到状态 112
    postfix_expr          转到状态 113
    unary_expr            转到状态 114
    op_unary              转到状态 115
    cast_expr             转到状态 116
    multiplicative_expr   转到状态 117
    additive_expr         转到状态 118
    shift_expr            转到状态 119
    relational_expr       转到状态 120
    equality_expr         转到状态 121
    AND_expr              转到状态 122
    ex_OR_expr            转到状态 123
    in_OR_expr            转到状态 124
    logical_AND_expr      转到状态 125
    logical_OR_expr       转到状态 126
    conditional_expr      转到状态 127
    assignment_expr       转到状态 128
    expr                  转到状态 129
    declaration           转到状态 130
    declaration_spec      转到状态 60
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    typedef_name          转到状态 16
    statement             转到状态 131
    labeled_statement     转到状态 132
    compound_statement    转到状态 133
    block_item_list       转到状态 134
    block_item            转到状态 135
    expr_statement        转到状态 136
    selection_statement   转到状态 137
    iteration_statement   转到状态 138
    jump_statement        转到状态 139


State 58

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   81 init_declarator: declarator '=' . initializer
  173 initializer: . assignment_expr
  174            | . '{' init_list '}'
  175            | . '{' init_list ',' '}'

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 141
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 142
    initializer          转到状态 143


State 59

  230 declaration_list: declaration .

    $default  reduce using rule 230 (declaration_list)


State 60

   68 declaration: declaration_spec . ';'
   69            | declaration_spec . init_declarator_list ';'
   78 init_declarator_list: . init_declarator
   79                     | . init_declarator_list ',' init_declarator
   80 init_declarator: . declarator
   81                | . declarator '=' initializer
  115 declarator: . direct_declarator
  116           | . pointer direct_declarator
  117 direct_declarator: . identifier
  118                  | . '(' declarator ')'
  119                  | . direct_declarator '[' ']'
  120                  | . direct_declarator '[' type_qual_list ']'
  121                  | . direct_declarator '[' assignment_expr ']'
  122                  | . direct_declarator '[' type_qual_list assignment_expr ']'
  123                  | . direct_declarator '[' STATIC assignment_expr ']'
  124                  | . direct_declarator '[' STATIC type_qual_list assignment_expr ']'
  125                  | . direct_declarator '[' type_qual_list STATIC assignment_expr ']'
  126                  | . direct_declarator '[' '*' ']'
  127                  | . direct_declarator '[' type_qual_list '*' ']'
  128                  | . direct_declarator '(' para_type_list ')'
  129                  | . direct_declarator '(' identifier_list ')'
  130                  | . direct_declarator '(' ')'
  131 pointer: . '*'
  132        | . '*' type_qual_list
  133        | . '*' pointer
  134        | . '*' type_qual_list pointer

    identifier  shift, and go to state 25
    '*'         shift, and go to state 26
    '('         shift, and go to state 27
    ';'         shift, and go to state 28

    init_declarator_list  转到状态 29
    init_declarator       转到状态 30
    declarator            转到状态 83
    direct_declarator     转到状态 32
    pointer               转到状态 33


State 61

  228 func_definition: declaration_spec declarator compound_statement .

    $default  reduce using rule 228 (func_definition)


State 62

   68 declaration: . declaration_spec ';'
   69            | . declaration_spec init_declarator_list ';'
   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  172 typedef_name: . identifier
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  229 func_definition: declaration_spec declarator declaration_list . compound_statement
  231 declaration_list: declaration_list . declaration

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 8
    '{'                      shift, and go to state 57

    declaration           转到状态 144
    declaration_spec      转到状态 60
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    typedef_name          转到状态 16
    compound_statement    转到状态 145


State 63

   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  128 direct_declarator: direct_declarator '(' . para_type_list ')'
  129                  | direct_declarator '(' . identifier_list ')'
  130                  | direct_declarator '(' . ')'
  137 para_type_list: . para_list
  138               | . para_list ',' ellipsis
  139 para_list: . para_declaration
  140          | . para_list ',' para_declaration
  141 para_declaration: . declaration_spec declarator
  142                 | . declaration_spec
  143                 | . declaration_spec abstract_declarator
  144 identifier_list: . identifier
  145                | . identifier_list ',' identifier
  172 typedef_name: . identifier

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 146
    ')'                      shift, and go to state 147

    declaration_spec      转到状态 148
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    para_type_list        转到状态 149
    para_list             转到状态 150
    para_declaration      转到状态 151
    identifier_list       转到状态 152
    typedef_name          转到状态 16


State 64

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  119 direct_declarator: direct_declarator '[' . ']'
  120                  | direct_declarator '[' . type_qual_list ']'
  121                  | direct_declarator '[' . assignment_expr ']'
  122                  | direct_declarator '[' . type_qual_list assignment_expr ']'
  123                  | direct_declarator '[' . STATIC assignment_expr ']'
  124                  | direct_declarator '[' . STATIC type_qual_list assignment_expr ']'
  125                  | direct_declarator '[' . type_qual_list STATIC assignment_expr ']'
  126                  | direct_declarator '[' . '*' ']'
  127                  | direct_declarator '[' . type_qual_list '*' ']'
  135 type_qual_list: . type_qual
  136               | . type_qual_list type_qual

    STATIC          shift, and go to state 153
    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 154
    '('             shift, and go to state 106
    ']'             shift, and go to state 155
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 156
    type_qual            转到状态 51
    type_qual_list       转到状态 157


State 65

  116 declarator: pointer direct_declarator .  [INLINE, ENUM, STATIC, type_qualifier, storage_class_specifier, type_specifier, struct_or_union, identifier, ')', '{', ',', ':', ';', '=']
  119 direct_declarator: direct_declarator . '[' ']'
  120                  | direct_declarator . '[' type_qual_list ']'
  121                  | direct_declarator . '[' assignment_expr ']'
  122                  | direct_declarator . '[' type_qual_list assignment_expr ']'
  123                  | direct_declarator . '[' STATIC assignment_expr ']'
  124                  | direct_declarator . '[' STATIC type_qual_list assignment_expr ']'
  125                  | direct_declarator . '[' type_qual_list STATIC assignment_expr ']'
  126                  | direct_declarator . '[' '*' ']'
  127                  | direct_declarator . '[' type_qual_list '*' ']'
  128                  | direct_declarator . '(' para_type_list ')'
  129                  | direct_declarator . '(' identifier_list ')'
  130                  | direct_declarator . '(' ')'

    '('  shift, and go to state 63
    '['  shift, and go to state 64

    $default  reduce using rule 116 (declarator)


State 66

  104 enum_spec: ENUM identifier '{' enum_list . '}'
  106          | ENUM identifier '{' enum_list . ',' '}'
  109 enum_list: enum_list . ',' enumerator

    '}'  shift, and go to state 158
    ','  shift, and go to state 159


State 67

  103 enum_spec: ENUM '{' enum_list '}' .

    $default  reduce using rule 103 (enum_spec)


State 68

  105 enum_spec: ENUM '{' enum_list ',' . '}'
  109 enum_list: enum_list ',' . enumerator
  110 enumerator: . enum_constant
  111           | . enum_constant '=' constant_expr
  112 enum_constant: . identifier

    identifier  shift, and go to state 40
    '}'         shift, and go to state 160

    enumerator     转到状态 161
    enum_constant  转到状态 43


State 69

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   67 constant_expr: . conditional_expr
  111 enumerator: enum_constant '=' . constant_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 163
    constant_expr        转到状态 164


State 70

   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   89                     | struct_or_union identifier '{' struct_declaration_list . '}'
   90                     | . struct_or_union identifier
   92 struct_declaration_list: struct_declaration_list . struct_declaration
   93 struct_declaration: . spec_qual_list struct_declarator_list ';'
   94 spec_qual_list: . type_spec
   95               | . type_spec spec_qual_list
   96               | . type_qual
   97               | . type_qual spec_qual_list
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  113 type_qual: . type_qualifier
  172 typedef_name: . identifier

    ENUM             shift, and go to state 2
    type_qualifier   shift, and go to state 45
    type_specifier   shift, and go to state 6
    struct_or_union  shift, and go to state 7
    identifier       shift, and go to state 8
    '}'              shift, and go to state 165

    type_spec             转到状态 46
    struct_or_union_spec  转到状态 13
    struct_declaration    转到状态 73
    spec_qual_list        转到状态 49
    enum_spec             转到状态 14
    type_qual             转到状态 50
    typedef_name          转到状态 16


State 71

   95 spec_qual_list: type_spec spec_qual_list .

    $default  reduce using rule 95 (spec_qual_list)


State 72

   88 struct_or_union_spec: struct_or_union '{' struct_declaration_list '}' .

    $default  reduce using rule 88 (struct_or_union_spec)


State 73

   92 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 92 (struct_declaration_list)


State 74

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   67 constant_expr: . conditional_expr
  101 struct_declarator: ':' . constant_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 163
    constant_expr        转到状态 166


State 75

   93 struct_declaration: spec_qual_list struct_declarator_list . ';'
   99 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 167
    ';'  shift, and go to state 168


State 76

   98 struct_declarator_list: struct_declarator .

    $default  reduce using rule 98 (struct_declarator_list)


State 77

  100 struct_declarator: declarator .  [',', ';']
  102                  | declarator . ':' constant_expr

    ':'  shift, and go to state 169

    $default  reduce using rule 100 (struct_declarator)


State 78

   97 spec_qual_list: type_qual spec_qual_list .

    $default  reduce using rule 97 (spec_qual_list)


State 79

  136 type_qual_list: type_qual_list type_qual .

    $default  reduce using rule 136 (type_qual_list)


State 80

  134 pointer: '*' type_qual_list pointer .

    $default  reduce using rule 134 (pointer)


State 81

  118 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 118 (direct_declarator)


State 82

   79 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 79 (init_declarator_list)


State 83

   80 init_declarator: declarator .  [',', ';']
   81                | declarator . '=' initializer

    '='  shift, and go to state 58

    $default  reduce using rule 80 (init_declarator)


State 84

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  206                    | DO . statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 171
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 85

  207 iteration_statement: FOR . '(' ')' statement
  208                    | FOR . '(' expr ';' ';' ')' statement
  209                    | FOR . '(' ';' expr ';' ')' statement
  210                    | FOR . '(' ';' ';' expr ')' statement
  211                    | FOR . '(' expr ';' expr ';' ')' statement
  212                    | FOR . '(' expr ';' ';' expr ')' statement
  213                    | FOR . '(' ';' expr ';' expr ')' statement
  214                    | FOR . '(' expr ';' expr ';' expr ')' statement
  215                    | FOR . '(' declaration ';' ')' statement
  216                    | FOR . '(' declaration expr ';' ')' statement
  217                    | FOR . '(' declaration ';' expr ')' statement
  218                    | FOR . '(' declaration expr ';' expr ')' statement

    '('  shift, and go to state 172


State 86

  205 iteration_statement: WHILE . '(' expr ')' statement

    '('  shift, and go to state 173


State 87

  221 jump_statement: BREAK . ';'

    ';'  shift, and go to state 174


State 88

  220 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 175


State 89

  219 jump_statement: GOTO . identifier ';'

    identifier  shift, and go to state 176


State 90

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  222 jump_statement: RETURN . ';'
  223               | RETURN . expr ';'

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 177

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 178


State 91

  202 selection_statement: IF . '(' expr ')' statement
  203                    | IF . '(' expr ')' statement ELSE statement

    '('  shift, and go to state 179


State 92

  204 selection_statement: SWITCH . '(' expr ')' statement

    '('  shift, and go to state 180


State 93

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   67 constant_expr: . conditional_expr
  192 labeled_statement: CASE . constant_expr ':' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 163
    constant_expr        转到状态 181


State 94

  193 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 182


State 95

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   23           | SIZEOF . unary_expr
   24           | . SIZEOF '(' type_name ')'
   24           | SIZEOF . '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 183
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr  转到状态 112
    postfix_expr  转到状态 113
    unary_expr    转到状态 184
    op_unary      转到状态 115


State 96

    1 primary_expr: identifier .  [op_assign, op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, op_ptr, op_pp, op_dd, '<', '>', '+', '-', '*', '/', '(', '[', '.', ',', '&', '%', '^', '|', '?', ';']
  172 typedef_name: identifier .  [INLINE, ENUM, STATIC, type_qualifier, storage_class_specifier, type_specifier, struct_or_union, identifier, '*', '(', ';']
  191 labeled_statement: identifier . ':' statement

    ':'  shift, and go to state 185

    INLINE                   reduce using rule 172 (typedef_name)
    ENUM                     reduce using rule 172 (typedef_name)
    STATIC                   reduce using rule 172 (typedef_name)
    type_qualifier           reduce using rule 172 (typedef_name)
    storage_class_specifier  reduce using rule 172 (typedef_name)
    type_specifier           reduce using rule 172 (typedef_name)
    struct_or_union          reduce using rule 172 (typedef_name)
    identifier               reduce using rule 172 (typedef_name)
    '*'                      reduce using rule 1 (primary_expr)
    '*'                      [reduce using rule 172 (typedef_name)]
    '('                      reduce using rule 1 (primary_expr)
    '('                      [reduce using rule 172 (typedef_name)]
    ';'                      reduce using rule 1 (primary_expr)
    ';'                      [reduce using rule 172 (typedef_name)]
    $default                 reduce using rule 1 (primary_expr)


State 97

    2 primary_expr: const_int .

    $default  reduce using rule 2 (primary_expr)


State 98

    3 primary_expr: const_char .

    $default  reduce using rule 3 (primary_expr)


State 99

    4 primary_expr: const_float .

    $default  reduce using rule 4 (primary_expr)


State 100

    5 primary_expr: string_literal .

    $default  reduce using rule 5 (primary_expr)


State 101

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   20           | op_pp . unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 186
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr  转到状态 112
    postfix_expr  转到状态 113
    unary_expr    转到状态 187
    op_unary      转到状态 115


State 102

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   21           | op_dd . unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 186
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr  转到状态 112
    postfix_expr  转到状态 113
    unary_expr    转到状态 188
    op_unary      转到状态 115


State 103

   27 op_unary: '+' .

    $default  reduce using rule 27 (op_unary)


State 104

   28 op_unary: '-' .

    $default  reduce using rule 28 (op_unary)


State 105

   26 op_unary: '*' .

    $default  reduce using rule 26 (op_unary)


State 106

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    6             | '(' . expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   15             | '(' . type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   16             | '(' . type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   32          | '(' . type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
   94 spec_qual_list: . type_spec
   95               | . type_spec spec_qual_list
   96               | . type_qual
   97               | . type_qual spec_qual_list
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  113 type_qual: . type_qualifier
  146 type_name: . spec_qual_list
  147          | . spec_qual_list abstract_declarator
  172 typedef_name: . identifier

    ENUM             shift, and go to state 2
    SIZEOF           shift, and go to state 95
    type_qualifier   shift, and go to state 45
    type_specifier   shift, and go to state 6
    struct_or_union  shift, and go to state 7
    identifier       shift, and go to state 189
    const_int        shift, and go to state 97
    const_char       shift, and go to state 98
    const_float      shift, and go to state 99
    string_literal   shift, and go to state 100
    op_pp            shift, and go to state 101
    op_dd            shift, and go to state 102
    '+'              shift, and go to state 103
    '-'              shift, and go to state 104
    '*'              shift, and go to state 105
    '('              shift, and go to state 106
    '&'              shift, and go to state 108
    '~'              shift, and go to state 109
    '!'              shift, and go to state 110

    primary_expr          转到状态 112
    postfix_expr          转到状态 113
    unary_expr            转到状态 114
    op_unary              转到状态 115
    cast_expr             转到状态 116
    multiplicative_expr   转到状态 117
    additive_expr         转到状态 118
    shift_expr            转到状态 119
    relational_expr       转到状态 120
    equality_expr         转到状态 121
    AND_expr              转到状态 122
    ex_OR_expr            转到状态 123
    in_OR_expr            转到状态 124
    logical_AND_expr      转到状态 125
    logical_OR_expr       转到状态 126
    conditional_expr      转到状态 127
    assignment_expr       转到状态 128
    expr                  转到状态 190
    type_spec             转到状态 46
    struct_or_union_spec  转到状态 13
    spec_qual_list        转到状态 191
    enum_spec             转到状态 14
    type_qual             转到状态 50
    type_name             转到状态 192
    typedef_name          转到状态 16


State 107

  194 compound_statement: '{' '}' .

    $default  reduce using rule 194 (compound_statement)


State 108

   25 op_unary: '&' .

    $default  reduce using rule 25 (op_unary)


State 109

   29 op_unary: '~' .

    $default  reduce using rule 29 (op_unary)


State 110

   30 op_unary: '!' .

    $default  reduce using rule 30 (op_unary)


State 111

  200 expr_statement: ';' .

    $default  reduce using rule 200 (expr_statement)


State 112

    7 postfix_expr: primary_expr .

    $default  reduce using rule 7 (postfix_expr)


State 113

    8 postfix_expr: postfix_expr . '[' expr ']'
    9             | postfix_expr . '(' ')'
   10             | postfix_expr . '(' argument_expr_list ')'
   11             | postfix_expr . '.' identifier
   12             | postfix_expr . op_ptr identifier
   13             | postfix_expr . op_pp
   14             | postfix_expr . op_dd
   19 unary_expr: postfix_expr .  [op_assign, op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, '<', '>', '+', '-', '*', '/', ')', ']', '}', ',', '&', '%', '^', '|', '?', ':', ';']

    op_ptr  shift, and go to state 193
    op_pp   shift, and go to state 194
    op_dd   shift, and go to state 195
    '('     shift, and go to state 196
    '['     shift, and go to state 197
    '.'     shift, and go to state 198

    $default  reduce using rule 19 (unary_expr)


State 114

   31 cast_expr: unary_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, '<', '>', '+', '-', '*', '/', ')', ']', '}', ',', '&', '%', '^', '|', '?', ':', ';']
   64 assignment_expr: unary_expr . op_assign assignment_expr

    op_assign  shift, and go to state 199

    $default  reduce using rule 31 (cast_expr)


State 115

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   22           | op_unary . cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr  转到状态 112
    postfix_expr  转到状态 113
    unary_expr    转到状态 162
    op_unary      转到状态 115
    cast_expr     转到状态 200


State 116

   33 multiplicative_expr: cast_expr .

    $default  reduce using rule 33 (multiplicative_expr)


State 117

   34 multiplicative_expr: multiplicative_expr . '*' cast_expr
   35                    | multiplicative_expr . '/' cast_expr
   36                    | multiplicative_expr . '%' cast_expr
   37 additive_expr: multiplicative_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, '<', '>', '+', '-', ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    '*'  shift, and go to state 201
    '/'  shift, and go to state 202
    '%'  shift, and go to state 203

    $default  reduce using rule 37 (additive_expr)


State 118

   38 additive_expr: additive_expr . '+' multiplicative_expr
   39              | additive_expr . '-' multiplicative_expr
   40 shift_expr: additive_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, '<', '>', ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    '+'  shift, and go to state 204
    '-'  shift, and go to state 205

    $default  reduce using rule 40 (shift_expr)


State 119

   41 shift_expr: shift_expr . op_lshift additive_expr
   42           | shift_expr . op_rshift additive_expr
   43 relational_expr: shift_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, '<', '>', ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    op_lshift  shift, and go to state 206
    op_rshift  shift, and go to state 207

    $default  reduce using rule 43 (relational_expr)


State 120

   44 relational_expr: relational_expr . '<' shift_expr
   45                | relational_expr . '>' shift_expr
   46                | relational_expr . op_le shift_expr
   47                | relational_expr . op_ge shift_expr
   48 equality_expr: relational_expr .  [op_and, op_or, op_eq, op_ne, ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    op_le  shift, and go to state 208
    op_ge  shift, and go to state 209
    '<'    shift, and go to state 210
    '>'    shift, and go to state 211

    $default  reduce using rule 48 (equality_expr)


State 121

   49 equality_expr: equality_expr . op_eq relational_expr
   50              | equality_expr . op_ne relational_expr
   51 AND_expr: equality_expr .  [op_and, op_or, ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    op_eq  shift, and go to state 212
    op_ne  shift, and go to state 213

    $default  reduce using rule 51 (AND_expr)


State 122

   52 AND_expr: AND_expr . '&' equality_expr
   53 ex_OR_expr: AND_expr .  [op_and, op_or, ')', ']', '}', ',', '^', '|', '?', ':', ';']

    '&'  shift, and go to state 214

    $default  reduce using rule 53 (ex_OR_expr)


State 123

   54 ex_OR_expr: ex_OR_expr . '^' AND_expr
   55 in_OR_expr: ex_OR_expr .  [op_and, op_or, ')', ']', '}', ',', '|', '?', ':', ';']

    '^'  shift, and go to state 215

    $default  reduce using rule 55 (in_OR_expr)


State 124

   56 in_OR_expr: in_OR_expr . '|' ex_OR_expr
   57 logical_AND_expr: in_OR_expr .  [op_and, op_or, ')', ']', '}', ',', '?', ':', ';']

    '|'  shift, and go to state 216

    $default  reduce using rule 57 (logical_AND_expr)


State 125

   58 logical_AND_expr: logical_AND_expr . op_and in_OR_expr
   59 logical_OR_expr: logical_AND_expr .  [op_or, ')', ']', '}', ',', '?', ':', ';']

    op_and  shift, and go to state 217

    $default  reduce using rule 59 (logical_OR_expr)


State 126

   60 logical_OR_expr: logical_OR_expr . op_or logical_AND_expr
   61 conditional_expr: logical_OR_expr .  [')', ']', '}', ',', ':', ';']
   62                 | logical_OR_expr . '?' expr ':' conditional_expr

    op_or  shift, and go to state 218
    '?'    shift, and go to state 219

    $default  reduce using rule 61 (conditional_expr)


State 127

   63 assignment_expr: conditional_expr .

    $default  reduce using rule 63 (assignment_expr)


State 128

   65 expr: assignment_expr .

    $default  reduce using rule 65 (expr)


State 129

   66 expr: expr . ',' assignment_expr
  201 expr_statement: expr . ';'

    ','  shift, and go to state 220
    ';'  shift, and go to state 221


State 130

  198 block_item: declaration .

    $default  reduce using rule 198 (block_item)


State 131

  199 block_item: statement .

    $default  reduce using rule 199 (block_item)


State 132

  185 statement: labeled_statement .

    $default  reduce using rule 185 (statement)


State 133

  186 statement: compound_statement .

    $default  reduce using rule 186 (statement)


State 134

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
   68 declaration: . declaration_spec ';'
   69            | . declaration_spec init_declarator_list ';'
   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  172 typedef_name: . identifier
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  195                   | '{' block_item_list . '}'
  197 block_item_list: block_item_list . block_item
  198 block_item: . declaration
  199           | . statement
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    INLINE                   shift, and go to state 1
    DO                       shift, and go to state 84
    FOR                      shift, and go to state 85
    WHILE                    shift, and go to state 86
    BREAK                    shift, and go to state 87
    CONTINUE                 shift, and go to state 88
    GOTO                     shift, and go to state 89
    RETURN                   shift, and go to state 90
    IF                       shift, and go to state 91
    SWITCH                   shift, and go to state 92
    ENUM                     shift, and go to state 2
    CASE                     shift, and go to state 93
    DEFAULT                  shift, and go to state 94
    STATIC                   shift, and go to state 3
    SIZEOF                   shift, and go to state 95
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 96
    const_int                shift, and go to state 97
    const_char               shift, and go to state 98
    const_float              shift, and go to state 99
    string_literal           shift, and go to state 100
    op_pp                    shift, and go to state 101
    op_dd                    shift, and go to state 102
    '+'                      shift, and go to state 103
    '-'                      shift, and go to state 104
    '*'                      shift, and go to state 105
    '('                      shift, and go to state 106
    '{'                      shift, and go to state 57
    '}'                      shift, and go to state 222
    '&'                      shift, and go to state 108
    '~'                      shift, and go to state 109
    '!'                      shift, and go to state 110
    ';'                      shift, and go to state 111

    primary_expr          转到状态 112
    postfix_expr          转到状态 113
    unary_expr            转到状态 114
    op_unary              转到状态 115
    cast_expr             转到状态 116
    multiplicative_expr   转到状态 117
    additive_expr         转到状态 118
    shift_expr            转到状态 119
    relational_expr       转到状态 120
    equality_expr         转到状态 121
    AND_expr              转到状态 122
    ex_OR_expr            转到状态 123
    in_OR_expr            转到状态 124
    logical_AND_expr      转到状态 125
    logical_OR_expr       转到状态 126
    conditional_expr      转到状态 127
    assignment_expr       转到状态 128
    expr                  转到状态 129
    declaration           转到状态 130
    declaration_spec      转到状态 60
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    typedef_name          转到状态 16
    statement             转到状态 131
    labeled_statement     转到状态 132
    compound_statement    转到状态 133
    block_item            转到状态 223
    expr_statement        转到状态 136
    selection_statement   转到状态 137
    iteration_statement   转到状态 138
    jump_statement        转到状态 139


State 135

  196 block_item_list: block_item .

    $default  reduce using rule 196 (block_item_list)


State 136

  187 statement: expr_statement .

    $default  reduce using rule 187 (statement)


State 137

  188 statement: selection_statement .

    $default  reduce using rule 188 (statement)


State 138

  189 statement: iteration_statement .

    $default  reduce using rule 189 (statement)


State 139

  190 statement: jump_statement .

    $default  reduce using rule 190 (statement)


State 140

    1 primary_expr: identifier .

    $default  reduce using rule 1 (primary_expr)


State 141

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  173 initializer: . assignment_expr
  174            | . '{' init_list '}'
  174            | '{' . init_list '}'
  175            | . '{' init_list ',' '}'
  175            | '{' . init_list ',' '}'
  176 init_list: . initializer
  177          | . designation initializer
  178          | . init_list ',' initializer
  179          | . init_list ',' designation initializer
  180 designation: . designator_list '='
  181 designator_list: . designator
  182                | . designator_list designator
  183 designator: . '[' constant_expr ']'
  184           | . '.' identifier

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '['             shift, and go to state 224
    '.'             shift, and go to state 225
    '{'             shift, and go to state 141
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 142
    initializer          转到状态 226
    init_list            转到状态 227
    designation          转到状态 228
    designator_list      转到状态 229
    designator           转到状态 230


State 142

  173 initializer: assignment_expr .

    $default  reduce using rule 173 (initializer)


State 143

   81 init_declarator: declarator '=' initializer .

    $default  reduce using rule 81 (init_declarator)


State 144

  231 declaration_list: declaration_list declaration .

    $default  reduce using rule 231 (declaration_list)


State 145

  229 func_definition: declaration_spec declarator declaration_list compound_statement .

    $default  reduce using rule 229 (func_definition)


State 146

  144 identifier_list: identifier .  [')', ',']
  172 typedef_name: identifier .  [INLINE, ENUM, STATIC, type_qualifier, storage_class_specifier, type_specifier, struct_or_union, identifier, '*', '(', ')', '[', ',']

    ')'       reduce using rule 144 (identifier_list)
    ')'       [reduce using rule 172 (typedef_name)]
    ','       reduce using rule 144 (identifier_list)
    ','       [reduce using rule 172 (typedef_name)]
    $default  reduce using rule 172 (typedef_name)


State 147

  130 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 130 (direct_declarator)


State 148

  115 declarator: . direct_declarator
  116           | . pointer direct_declarator
  117 direct_declarator: . identifier
  118                  | . '(' declarator ')'
  119                  | . direct_declarator '[' ']'
  120                  | . direct_declarator '[' type_qual_list ']'
  121                  | . direct_declarator '[' assignment_expr ']'
  122                  | . direct_declarator '[' type_qual_list assignment_expr ']'
  123                  | . direct_declarator '[' STATIC assignment_expr ']'
  124                  | . direct_declarator '[' STATIC type_qual_list assignment_expr ']'
  125                  | . direct_declarator '[' type_qual_list STATIC assignment_expr ']'
  126                  | . direct_declarator '[' '*' ']'
  127                  | . direct_declarator '[' type_qual_list '*' ']'
  128                  | . direct_declarator '(' para_type_list ')'
  129                  | . direct_declarator '(' identifier_list ')'
  130                  | . direct_declarator '(' ')'
  131 pointer: . '*'
  132        | . '*' type_qual_list
  133        | . '*' pointer
  134        | . '*' type_qual_list pointer
  141 para_declaration: declaration_spec . declarator
  142                 | declaration_spec .  [')', ',']
  143                 | declaration_spec . abstract_declarator
  148 abstract_declarator: . pointer
  149                    | . direct_abstract_declarator
  150                    | . pointer direct_abstract_declarator
  151 direct_abstract_declarator: . '(' abstract_declarator ')'
  152                           | . '[' ']'
  153                           | . direct_abstract_declarator '[' ']'
  154                           | . '[' type_qual_list ']'
  155                           | . '[' assignment_expr ']'
  156                           | . direct_abstract_declarator '[' type_qual_list ']'
  157                           | . direct_abstract_declarator '[' assignment_expr ']'
  158                           | . '[' type_qual_list assignment_expr ']'
  159                           | . direct_abstract_declarator '[' type_qual_list assignment_expr ']'
  160                           | . '[' STATIC assignment_expr ']'
  161                           | . direct_abstract_declarator '[' STATIC assignment_expr ']'
  162                           | . '[' STATIC type_qual_list assignment_expr ']'
  163                           | . direct_abstract_declarator '[' STATIC type_qual_list assignment_expr ']'
  164                           | . '[' type_qual_list STATIC assignment_expr ']'
  165                           | . direct_abstract_declarator '[' type_qual_list STATIC assignment_expr ']'
  166                           | . '[' '*' ']'
  167                           | . direct_abstract_declarator '[' '*' ']'
  168                           | . direct_abstract_declarator '(' para_type_list ')'
  169                           | . direct_abstract_declarator '(' ')'
  170                           | . '(' para_type_list ')'
  171                           | . '(' ')'

    identifier  shift, and go to state 25
    '*'         shift, and go to state 26
    '('         shift, and go to state 231
    '['         shift, and go to state 232

    $default  reduce using rule 142 (para_declaration)

    declarator                  转到状态 233
    direct_declarator           转到状态 32
    pointer                     转到状态 234
    abstract_declarator         转到状态 235
    direct_abstract_declarator  转到状态 236


State 149

  128 direct_declarator: direct_declarator '(' para_type_list . ')'

    ')'  shift, and go to state 237


State 150

  137 para_type_list: para_list .  [')']
  138               | para_list . ',' ellipsis
  140 para_list: para_list . ',' para_declaration

    ','  shift, and go to state 238

    $default  reduce using rule 137 (para_type_list)


State 151

  139 para_list: para_declaration .

    $default  reduce using rule 139 (para_list)


State 152

  129 direct_declarator: direct_declarator '(' identifier_list . ')'
  145 identifier_list: identifier_list . ',' identifier

    ')'  shift, and go to state 239
    ','  shift, and go to state 240


State 153

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  123 direct_declarator: direct_declarator '[' STATIC . assignment_expr ']'
  124                  | direct_declarator '[' STATIC . type_qual_list assignment_expr ']'
  135 type_qual_list: . type_qual
  136               | . type_qual_list type_qual

    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 241
    type_qual            转到状态 51
    type_qual_list       转到状态 242


State 154

   26 op_unary: '*' .  [SIZEOF, identifier, const_int, const_char, const_float, string_literal, op_pp, op_dd, '+', '-', '*', '(', '&', '~', '!']
  126 direct_declarator: direct_declarator '[' '*' . ']'

    ']'  shift, and go to state 243

    $default  reduce using rule 26 (op_unary)


State 155

  119 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 119 (direct_declarator)


State 156

  121 direct_declarator: direct_declarator '[' assignment_expr . ']'

    ']'  shift, and go to state 244


State 157

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  120 direct_declarator: direct_declarator '[' type_qual_list . ']'
  122                  | direct_declarator '[' type_qual_list . assignment_expr ']'
  125                  | direct_declarator '[' type_qual_list . STATIC assignment_expr ']'
  127                  | direct_declarator '[' type_qual_list . '*' ']'
  136 type_qual_list: type_qual_list . type_qual

    STATIC          shift, and go to state 245
    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 246
    '('             shift, and go to state 106
    ']'             shift, and go to state 247
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 248
    type_qual            转到状态 79


State 158

  104 enum_spec: ENUM identifier '{' enum_list '}' .

    $default  reduce using rule 104 (enum_spec)


State 159

  106 enum_spec: ENUM identifier '{' enum_list ',' . '}'
  109 enum_list: enum_list ',' . enumerator
  110 enumerator: . enum_constant
  111           | . enum_constant '=' constant_expr
  112 enum_constant: . identifier

    identifier  shift, and go to state 40
    '}'         shift, and go to state 249

    enumerator     转到状态 161
    enum_constant  转到状态 43


State 160

  105 enum_spec: ENUM '{' enum_list ',' '}' .

    $default  reduce using rule 105 (enum_spec)


State 161

  109 enum_list: enum_list ',' enumerator .

    $default  reduce using rule 109 (enum_list)


State 162

   31 cast_expr: unary_expr .

    $default  reduce using rule 31 (cast_expr)


State 163

   67 constant_expr: conditional_expr .

    $default  reduce using rule 67 (constant_expr)


State 164

  111 enumerator: enum_constant '=' constant_expr .

    $default  reduce using rule 111 (enumerator)


State 165

   89 struct_or_union_spec: struct_or_union identifier '{' struct_declaration_list '}' .

    $default  reduce using rule 89 (struct_or_union_spec)


State 166

  101 struct_declarator: ':' constant_expr .

    $default  reduce using rule 101 (struct_declarator)


State 167

   99 struct_declarator_list: struct_declarator_list ',' . struct_declarator
  100 struct_declarator: . declarator
  101                  | . ':' constant_expr
  102                  | . declarator ':' constant_expr
  115 declarator: . direct_declarator
  116           | . pointer direct_declarator
  117 direct_declarator: . identifier
  118                  | . '(' declarator ')'
  119                  | . direct_declarator '[' ']'
  120                  | . direct_declarator '[' type_qual_list ']'
  121                  | . direct_declarator '[' assignment_expr ']'
  122                  | . direct_declarator '[' type_qual_list assignment_expr ']'
  123                  | . direct_declarator '[' STATIC assignment_expr ']'
  124                  | . direct_declarator '[' STATIC type_qual_list assignment_expr ']'
  125                  | . direct_declarator '[' type_qual_list STATIC assignment_expr ']'
  126                  | . direct_declarator '[' '*' ']'
  127                  | . direct_declarator '[' type_qual_list '*' ']'
  128                  | . direct_declarator '(' para_type_list ')'
  129                  | . direct_declarator '(' identifier_list ')'
  130                  | . direct_declarator '(' ')'
  131 pointer: . '*'
  132        | . '*' type_qual_list
  133        | . '*' pointer
  134        | . '*' type_qual_list pointer

    identifier  shift, and go to state 25
    '*'         shift, and go to state 26
    '('         shift, and go to state 27
    ':'         shift, and go to state 74

    struct_declarator  转到状态 250
    declarator         转到状态 77
    direct_declarator  转到状态 32
    pointer            转到状态 33


State 168

   93 struct_declaration: spec_qual_list struct_declarator_list ';' .

    $default  reduce using rule 93 (struct_declaration)


State 169

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   67 constant_expr: . conditional_expr
  102 struct_declarator: declarator ':' . constant_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 163
    constant_expr        转到状态 251


State 170

    1 primary_expr: identifier .  [op_assign, op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, op_ptr, op_pp, op_dd, '<', '>', '+', '-', '*', '/', '(', '[', '.', ',', '&', '%', '^', '|', '?', ';']
  191 labeled_statement: identifier . ':' statement

    ':'  shift, and go to state 185

    $default  reduce using rule 1 (primary_expr)


State 171

  206 iteration_statement: DO statement . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 252


State 172

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
   68 declaration: . declaration_spec ';'
   69            | . declaration_spec init_declarator_list ';'
   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  172 typedef_name: . identifier
  207 iteration_statement: FOR '(' . ')' statement
  208                    | FOR '(' . expr ';' ';' ')' statement
  209                    | FOR '(' . ';' expr ';' ')' statement
  210                    | FOR '(' . ';' ';' expr ')' statement
  211                    | FOR '(' . expr ';' expr ';' ')' statement
  212                    | FOR '(' . expr ';' ';' expr ')' statement
  213                    | FOR '(' . ';' expr ';' expr ')' statement
  214                    | FOR '(' . expr ';' expr ';' expr ')' statement
  215                    | FOR '(' . declaration ';' ')' statement
  216                    | FOR '(' . declaration expr ';' ')' statement
  217                    | FOR '(' . declaration ';' expr ')' statement
  218                    | FOR '(' . declaration expr ';' expr ')' statement

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    SIZEOF                   shift, and go to state 95
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 189
    const_int                shift, and go to state 97
    const_char               shift, and go to state 98
    const_float              shift, and go to state 99
    string_literal           shift, and go to state 100
    op_pp                    shift, and go to state 101
    op_dd                    shift, and go to state 102
    '+'                      shift, and go to state 103
    '-'                      shift, and go to state 104
    '*'                      shift, and go to state 105
    '('                      shift, and go to state 106
    ')'                      shift, and go to state 253
    '&'                      shift, and go to state 108
    '~'                      shift, and go to state 109
    '!'                      shift, and go to state 110
    ';'                      shift, and go to state 254

    primary_expr          转到状态 112
    postfix_expr          转到状态 113
    unary_expr            转到状态 114
    op_unary              转到状态 115
    cast_expr             转到状态 116
    multiplicative_expr   转到状态 117
    additive_expr         转到状态 118
    shift_expr            转到状态 119
    relational_expr       转到状态 120
    equality_expr         转到状态 121
    AND_expr              转到状态 122
    ex_OR_expr            转到状态 123
    in_OR_expr            转到状态 124
    logical_AND_expr      转到状态 125
    logical_OR_expr       转到状态 126
    conditional_expr      转到状态 127
    assignment_expr       转到状态 128
    expr                  转到状态 255
    declaration           转到状态 256
    declaration_spec      转到状态 60
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    typedef_name          转到状态 16


State 173

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  205 iteration_statement: WHILE '(' . expr ')' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 257


State 174

  221 jump_statement: BREAK ';' .

    $default  reduce using rule 221 (jump_statement)


State 175

  220 jump_statement: CONTINUE ';' .

    $default  reduce using rule 220 (jump_statement)


State 176

  219 jump_statement: GOTO identifier . ';'

    ';'  shift, and go to state 258


State 177

  222 jump_statement: RETURN ';' .

    $default  reduce using rule 222 (jump_statement)


State 178

   66 expr: expr . ',' assignment_expr
  223 jump_statement: RETURN expr . ';'

    ','  shift, and go to state 220
    ';'  shift, and go to state 259


State 179

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  202 selection_statement: IF '(' . expr ')' statement
  203                    | IF '(' . expr ')' statement ELSE statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 260


State 180

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  204 selection_statement: SWITCH '(' . expr ')' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 261


State 181

  192 labeled_statement: CASE constant_expr . ':' statement

    ':'  shift, and go to state 262


State 182

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  193                  | DEFAULT ':' . statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 263
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 183

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    6             | '(' . expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   15             | '(' . type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   16             | '(' . type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   24           | SIZEOF '(' . type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
   94 spec_qual_list: . type_spec
   95               | . type_spec spec_qual_list
   96               | . type_qual
   97               | . type_qual spec_qual_list
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  113 type_qual: . type_qualifier
  146 type_name: . spec_qual_list
  147          | . spec_qual_list abstract_declarator
  172 typedef_name: . identifier

    ENUM             shift, and go to state 2
    SIZEOF           shift, and go to state 95
    type_qualifier   shift, and go to state 45
    type_specifier   shift, and go to state 6
    struct_or_union  shift, and go to state 7
    identifier       shift, and go to state 189
    const_int        shift, and go to state 97
    const_char       shift, and go to state 98
    const_float      shift, and go to state 99
    string_literal   shift, and go to state 100
    op_pp            shift, and go to state 101
    op_dd            shift, and go to state 102
    '+'              shift, and go to state 103
    '-'              shift, and go to state 104
    '*'              shift, and go to state 105
    '('              shift, and go to state 106
    '&'              shift, and go to state 108
    '~'              shift, and go to state 109
    '!'              shift, and go to state 110

    primary_expr          转到状态 112
    postfix_expr          转到状态 113
    unary_expr            转到状态 114
    op_unary              转到状态 115
    cast_expr             转到状态 116
    multiplicative_expr   转到状态 117
    additive_expr         转到状态 118
    shift_expr            转到状态 119
    relational_expr       转到状态 120
    equality_expr         转到状态 121
    AND_expr              转到状态 122
    ex_OR_expr            转到状态 123
    in_OR_expr            转到状态 124
    logical_AND_expr      转到状态 125
    logical_OR_expr       转到状态 126
    conditional_expr      转到状态 127
    assignment_expr       转到状态 128
    expr                  转到状态 190
    type_spec             转到状态 46
    struct_or_union_spec  转到状态 13
    spec_qual_list        转到状态 191
    enum_spec             转到状态 14
    type_qual             转到状态 50
    type_name             转到状态 264
    typedef_name          转到状态 16


State 184

   23 unary_expr: SIZEOF unary_expr .

    $default  reduce using rule 23 (unary_expr)


State 185

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  191                  | identifier ':' . statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 265
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 186

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    6             | '(' . expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   15             | '(' . type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   16             | '(' . type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
   94 spec_qual_list: . type_spec
   95               | . type_spec spec_qual_list
   96               | . type_qual
   97               | . type_qual spec_qual_list
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  113 type_qual: . type_qualifier
  146 type_name: . spec_qual_list
  147          | . spec_qual_list abstract_declarator
  172 typedef_name: . identifier

    ENUM             shift, and go to state 2
    SIZEOF           shift, and go to state 95
    type_qualifier   shift, and go to state 45
    type_specifier   shift, and go to state 6
    struct_or_union  shift, and go to state 7
    identifier       shift, and go to state 189
    const_int        shift, and go to state 97
    const_char       shift, and go to state 98
    const_float      shift, and go to state 99
    string_literal   shift, and go to state 100
    op_pp            shift, and go to state 101
    op_dd            shift, and go to state 102
    '+'              shift, and go to state 103
    '-'              shift, and go to state 104
    '*'              shift, and go to state 105
    '('              shift, and go to state 106
    '&'              shift, and go to state 108
    '~'              shift, and go to state 109
    '!'              shift, and go to state 110

    primary_expr          转到状态 112
    postfix_expr          转到状态 113
    unary_expr            转到状态 114
    op_unary              转到状态 115
    cast_expr             转到状态 116
    multiplicative_expr   转到状态 117
    additive_expr         转到状态 118
    shift_expr            转到状态 119
    relational_expr       转到状态 120
    equality_expr         转到状态 121
    AND_expr              转到状态 122
    ex_OR_expr            转到状态 123
    in_OR_expr            转到状态 124
    logical_AND_expr      转到状态 125
    logical_OR_expr       转到状态 126
    conditional_expr      转到状态 127
    assignment_expr       转到状态 128
    expr                  转到状态 190
    type_spec             转到状态 46
    struct_or_union_spec  转到状态 13
    spec_qual_list        转到状态 191
    enum_spec             转到状态 14
    type_qual             转到状态 50
    type_name             转到状态 266
    typedef_name          转到状态 16


State 187

   20 unary_expr: op_pp unary_expr .

    $default  reduce using rule 20 (unary_expr)


State 188

   21 unary_expr: op_dd unary_expr .

    $default  reduce using rule 21 (unary_expr)


State 189

    1 primary_expr: identifier .  [op_assign, op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, op_ptr, op_pp, op_dd, '<', '>', '+', '-', '*', '/', '(', ')', '[', '.', ',', '&', '%', '^', '|', '?', ';']
  172 typedef_name: identifier .  [INLINE, ENUM, STATIC, type_qualifier, storage_class_specifier, type_specifier, struct_or_union, identifier, '*', '(', ')', '[', ';']

    INLINE                   reduce using rule 172 (typedef_name)
    ENUM                     reduce using rule 172 (typedef_name)
    STATIC                   reduce using rule 172 (typedef_name)
    type_qualifier           reduce using rule 172 (typedef_name)
    storage_class_specifier  reduce using rule 172 (typedef_name)
    type_specifier           reduce using rule 172 (typedef_name)
    struct_or_union          reduce using rule 172 (typedef_name)
    identifier               reduce using rule 172 (typedef_name)
    '*'                      reduce using rule 1 (primary_expr)
    '*'                      [reduce using rule 172 (typedef_name)]
    '('                      reduce using rule 1 (primary_expr)
    '('                      [reduce using rule 172 (typedef_name)]
    ')'                      reduce using rule 1 (primary_expr)
    ')'                      [reduce using rule 172 (typedef_name)]
    '['                      reduce using rule 1 (primary_expr)
    '['                      [reduce using rule 172 (typedef_name)]
    ';'                      reduce using rule 1 (primary_expr)
    ';'                      [reduce using rule 172 (typedef_name)]
    $default                 reduce using rule 1 (primary_expr)


State 190

    6 primary_expr: '(' expr . ')'
   66 expr: expr . ',' assignment_expr

    ')'  shift, and go to state 267
    ','  shift, and go to state 220


State 191

  131 pointer: . '*'
  132        | . '*' type_qual_list
  133        | . '*' pointer
  134        | . '*' type_qual_list pointer
  146 type_name: spec_qual_list .  [')']
  147          | spec_qual_list . abstract_declarator
  148 abstract_declarator: . pointer
  149                    | . direct_abstract_declarator
  150                    | . pointer direct_abstract_declarator
  151 direct_abstract_declarator: . '(' abstract_declarator ')'
  152                           | . '[' ']'
  153                           | . direct_abstract_declarator '[' ']'
  154                           | . '[' type_qual_list ']'
  155                           | . '[' assignment_expr ']'
  156                           | . direct_abstract_declarator '[' type_qual_list ']'
  157                           | . direct_abstract_declarator '[' assignment_expr ']'
  158                           | . '[' type_qual_list assignment_expr ']'
  159                           | . direct_abstract_declarator '[' type_qual_list assignment_expr ']'
  160                           | . '[' STATIC assignment_expr ']'
  161                           | . direct_abstract_declarator '[' STATIC assignment_expr ']'
  162                           | . '[' STATIC type_qual_list assignment_expr ']'
  163                           | . direct_abstract_declarator '[' STATIC type_qual_list assignment_expr ']'
  164                           | . '[' type_qual_list STATIC assignment_expr ']'
  165                           | . direct_abstract_declarator '[' type_qual_list STATIC assignment_expr ']'
  166                           | . '[' '*' ']'
  167                           | . direct_abstract_declarator '[' '*' ']'
  168                           | . direct_abstract_declarator '(' para_type_list ')'
  169                           | . direct_abstract_declarator '(' ')'
  170                           | . '(' para_type_list ')'
  171                           | . '(' ')'

    '*'  shift, and go to state 26
    '('  shift, and go to state 268
    '['  shift, and go to state 232

    $default  reduce using rule 146 (type_name)

    pointer                     转到状态 269
    abstract_declarator         转到状态 270
    direct_abstract_declarator  转到状态 236


State 192

   15 postfix_expr: '(' type_name . ')' '{' init_list '}'
   16             | '(' type_name . ')' '{' init_list ',' '}'
   32 cast_expr: '(' type_name . ')' cast_expr

    ')'  shift, and go to state 271


State 193

   12 postfix_expr: postfix_expr op_ptr . identifier

    identifier  shift, and go to state 272


State 194

   13 postfix_expr: postfix_expr op_pp .

    $default  reduce using rule 13 (postfix_expr)


State 195

   14 postfix_expr: postfix_expr op_dd .

    $default  reduce using rule 14 (postfix_expr)


State 196

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
    9             | postfix_expr '(' . ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   10             | postfix_expr '(' . argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   17 argument_expr_list: . assignment_expr
   18                   | . argument_expr_list ',' assignment_expr
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    ')'             shift, and go to state 273
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    argument_expr_list   转到状态 274
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 275


State 197

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    8             | postfix_expr '[' . expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 276


State 198

   11 postfix_expr: postfix_expr '.' . identifier

    identifier  shift, and go to state 277


State 199

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   64                | unary_expr op_assign . assignment_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 278


State 200

   22 unary_expr: op_unary cast_expr .

    $default  reduce using rule 22 (unary_expr)


State 201

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   34 multiplicative_expr: multiplicative_expr '*' . cast_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr  转到状态 112
    postfix_expr  转到状态 113
    unary_expr    转到状态 162
    op_unary      转到状态 115
    cast_expr     转到状态 279


State 202

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   35 multiplicative_expr: multiplicative_expr '/' . cast_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr  转到状态 112
    postfix_expr  转到状态 113
    unary_expr    转到状态 162
    op_unary      转到状态 115
    cast_expr     转到状态 280


State 203

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   36 multiplicative_expr: multiplicative_expr '%' . cast_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr  转到状态 112
    postfix_expr  转到状态 113
    unary_expr    转到状态 162
    op_unary      转到状态 115
    cast_expr     转到状态 281


State 204

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   38 additive_expr: additive_expr '+' . multiplicative_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 282


State 205

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   39 additive_expr: additive_expr '-' . multiplicative_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 283


State 206

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   41 shift_expr: shift_expr op_lshift . additive_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 284


State 207

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   42 shift_expr: shift_expr op_rshift . additive_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 285


State 208

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   46 relational_expr: relational_expr op_le . shift_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 286


State 209

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   47 relational_expr: relational_expr op_ge . shift_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 287


State 210

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   44 relational_expr: relational_expr '<' . shift_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 288


State 211

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   45 relational_expr: relational_expr '>' . shift_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 289


State 212

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   49 equality_expr: equality_expr op_eq . relational_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 290


State 213

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   50 equality_expr: equality_expr op_ne . relational_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 291


State 214

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   52 AND_expr: AND_expr '&' . equality_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 292


State 215

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   54 ex_OR_expr: ex_OR_expr '^' . AND_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 293


State 216

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   56 in_OR_expr: in_OR_expr '|' . ex_OR_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 294


State 217

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   58 logical_AND_expr: logical_AND_expr op_and . in_OR_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 295


State 218

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   60 logical_OR_expr: logical_OR_expr op_or . logical_AND_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 296


State 219

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   62                 | logical_OR_expr '?' . expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 297


State 220

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   66 expr: expr ',' . assignment_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 298


State 221

  201 expr_statement: expr ';' .

    $default  reduce using rule 201 (expr_statement)


State 222

  195 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 195 (compound_statement)


State 223

  197 block_item_list: block_item_list block_item .

    $default  reduce using rule 197 (block_item_list)


State 224

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   67 constant_expr: . conditional_expr
  183 designator: '[' . constant_expr ']'

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 163
    constant_expr        转到状态 299


State 225

  184 designator: '.' . identifier

    identifier  shift, and go to state 300


State 226

  176 init_list: initializer .

    $default  reduce using rule 176 (init_list)


State 227

  174 initializer: '{' init_list . '}'
  175            | '{' init_list . ',' '}'
  178 init_list: init_list . ',' initializer
  179          | init_list . ',' designation initializer

    '}'  shift, and go to state 301
    ','  shift, and go to state 302


State 228

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  173 initializer: . assignment_expr
  174            | . '{' init_list '}'
  175            | . '{' init_list ',' '}'
  177 init_list: designation . initializer

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 141
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 142
    initializer          转到状态 303


State 229

  180 designation: designator_list . '='
  182 designator_list: designator_list . designator
  183 designator: . '[' constant_expr ']'
  184           | . '.' identifier

    '['  shift, and go to state 224
    '.'  shift, and go to state 225
    '='  shift, and go to state 304

    designator  转到状态 305


State 230

  181 designator_list: designator .

    $default  reduce using rule 181 (designator_list)


State 231

   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  115 declarator: . direct_declarator
  116           | . pointer direct_declarator
  117 direct_declarator: . identifier
  118                  | . '(' declarator ')'
  118                  | '(' . declarator ')'
  119                  | . direct_declarator '[' ']'
  120                  | . direct_declarator '[' type_qual_list ']'
  121                  | . direct_declarator '[' assignment_expr ']'
  122                  | . direct_declarator '[' type_qual_list assignment_expr ']'
  123                  | . direct_declarator '[' STATIC assignment_expr ']'
  124                  | . direct_declarator '[' STATIC type_qual_list assignment_expr ']'
  125                  | . direct_declarator '[' type_qual_list STATIC assignment_expr ']'
  126                  | . direct_declarator '[' '*' ']'
  127                  | . direct_declarator '[' type_qual_list '*' ']'
  128                  | . direct_declarator '(' para_type_list ')'
  129                  | . direct_declarator '(' identifier_list ')'
  130                  | . direct_declarator '(' ')'
  131 pointer: . '*'
  132        | . '*' type_qual_list
  133        | . '*' pointer
  134        | . '*' type_qual_list pointer
  137 para_type_list: . para_list
  138               | . para_list ',' ellipsis
  139 para_list: . para_declaration
  140          | . para_list ',' para_declaration
  141 para_declaration: . declaration_spec declarator
  142                 | . declaration_spec
  143                 | . declaration_spec abstract_declarator
  148 abstract_declarator: . pointer
  149                    | . direct_abstract_declarator
  150                    | . pointer direct_abstract_declarator
  151 direct_abstract_declarator: . '(' abstract_declarator ')'
  151                           | '(' . abstract_declarator ')'
  152                           | . '[' ']'
  153                           | . direct_abstract_declarator '[' ']'
  154                           | . '[' type_qual_list ']'
  155                           | . '[' assignment_expr ']'
  156                           | . direct_abstract_declarator '[' type_qual_list ']'
  157                           | . direct_abstract_declarator '[' assignment_expr ']'
  158                           | . '[' type_qual_list assignment_expr ']'
  159                           | . direct_abstract_declarator '[' type_qual_list assignment_expr ']'
  160                           | . '[' STATIC assignment_expr ']'
  161                           | . direct_abstract_declarator '[' STATIC assignment_expr ']'
  162                           | . '[' STATIC type_qual_list assignment_expr ']'
  163                           | . direct_abstract_declarator '[' STATIC type_qual_list assignment_expr ']'
  164                           | . '[' type_qual_list STATIC assignment_expr ']'
  165                           | . direct_abstract_declarator '[' type_qual_list STATIC assignment_expr ']'
  166                           | . '[' '*' ']'
  167                           | . direct_abstract_declarator '[' '*' ']'
  168                           | . direct_abstract_declarator '(' para_type_list ')'
  169                           | . direct_abstract_declarator '(' ')'
  170                           | . '(' para_type_list ')'
  170                           | '(' . para_type_list ')'
  171                           | . '(' ')'
  171                           | '(' . ')'
  172 typedef_name: . identifier

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 306
    '*'                      shift, and go to state 26
    '('                      shift, and go to state 231
    ')'                      shift, and go to state 307
    '['                      shift, and go to state 232

    declaration_spec            转到状态 148
    storage_class_spec          转到状态 11
    type_spec                   转到状态 12
    struct_or_union_spec        转到状态 13
    enum_spec                   转到状态 14
    func_spec                   转到状态 15
    declarator                  转到状态 54
    direct_declarator           转到状态 32
    pointer                     转到状态 234
    para_type_list              转到状态 308
    para_list                   转到状态 150
    para_declaration            转到状态 151
    abstract_declarator         转到状态 309
    direct_abstract_declarator  转到状态 236
    typedef_name                转到状态 16


State 232

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  135 type_qual_list: . type_qual
  136               | . type_qual_list type_qual
  152 direct_abstract_declarator: '[' . ']'
  154                           | '[' . type_qual_list ']'
  155                           | '[' . assignment_expr ']'
  158                           | '[' . type_qual_list assignment_expr ']'
  160                           | '[' . STATIC assignment_expr ']'
  162                           | '[' . STATIC type_qual_list assignment_expr ']'
  164                           | '[' . type_qual_list STATIC assignment_expr ']'
  166                           | '[' . '*' ']'

    STATIC          shift, and go to state 310
    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 311
    '('             shift, and go to state 106
    ']'             shift, and go to state 312
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 313
    type_qual            转到状态 51
    type_qual_list       转到状态 314


State 233

  141 para_declaration: declaration_spec declarator .

    $default  reduce using rule 141 (para_declaration)


State 234

  116 declarator: pointer . direct_declarator
  117 direct_declarator: . identifier
  118                  | . '(' declarator ')'
  119                  | . direct_declarator '[' ']'
  120                  | . direct_declarator '[' type_qual_list ']'
  121                  | . direct_declarator '[' assignment_expr ']'
  122                  | . direct_declarator '[' type_qual_list assignment_expr ']'
  123                  | . direct_declarator '[' STATIC assignment_expr ']'
  124                  | . direct_declarator '[' STATIC type_qual_list assignment_expr ']'
  125                  | . direct_declarator '[' type_qual_list STATIC assignment_expr ']'
  126                  | . direct_declarator '[' '*' ']'
  127                  | . direct_declarator '[' type_qual_list '*' ']'
  128                  | . direct_declarator '(' para_type_list ')'
  129                  | . direct_declarator '(' identifier_list ')'
  130                  | . direct_declarator '(' ')'
  148 abstract_declarator: pointer .  [')', ',']
  150                    | pointer . direct_abstract_declarator
  151 direct_abstract_declarator: . '(' abstract_declarator ')'
  152                           | . '[' ']'
  153                           | . direct_abstract_declarator '[' ']'
  154                           | . '[' type_qual_list ']'
  155                           | . '[' assignment_expr ']'
  156                           | . direct_abstract_declarator '[' type_qual_list ']'
  157                           | . direct_abstract_declarator '[' assignment_expr ']'
  158                           | . '[' type_qual_list assignment_expr ']'
  159                           | . direct_abstract_declarator '[' type_qual_list assignment_expr ']'
  160                           | . '[' STATIC assignment_expr ']'
  161                           | . direct_abstract_declarator '[' STATIC assignment_expr ']'
  162                           | . '[' STATIC type_qual_list assignment_expr ']'
  163                           | . direct_abstract_declarator '[' STATIC type_qual_list assignment_expr ']'
  164                           | . '[' type_qual_list STATIC assignment_expr ']'
  165                           | . direct_abstract_declarator '[' type_qual_list STATIC assignment_expr ']'
  166                           | . '[' '*' ']'
  167                           | . direct_abstract_declarator '[' '*' ']'
  168                           | . direct_abstract_declarator '(' para_type_list ')'
  169                           | . direct_abstract_declarator '(' ')'
  170                           | . '(' para_type_list ')'
  171                           | . '(' ')'

    identifier  shift, and go to state 25
    '('         shift, and go to state 231
    '['         shift, and go to state 232

    $default  reduce using rule 148 (abstract_declarator)

    direct_declarator           转到状态 65
    direct_abstract_declarator  转到状态 315


State 235

  143 para_declaration: declaration_spec abstract_declarator .

    $default  reduce using rule 143 (para_declaration)


State 236

  149 abstract_declarator: direct_abstract_declarator .  [')', ',']
  153 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  156                           | direct_abstract_declarator . '[' type_qual_list ']'
  157                           | direct_abstract_declarator . '[' assignment_expr ']'
  159                           | direct_abstract_declarator . '[' type_qual_list assignment_expr ']'
  161                           | direct_abstract_declarator . '[' STATIC assignment_expr ']'
  163                           | direct_abstract_declarator . '[' STATIC type_qual_list assignment_expr ']'
  165                           | direct_abstract_declarator . '[' type_qual_list STATIC assignment_expr ']'
  167                           | direct_abstract_declarator . '[' '*' ']'
  168                           | direct_abstract_declarator . '(' para_type_list ')'
  169                           | direct_abstract_declarator . '(' ')'

    '('  shift, and go to state 316
    '['  shift, and go to state 317

    $default  reduce using rule 149 (abstract_declarator)


State 237

  128 direct_declarator: direct_declarator '(' para_type_list ')' .

    $default  reduce using rule 128 (direct_declarator)


State 238

   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  138 para_type_list: para_list ',' . ellipsis
  140 para_list: para_list ',' . para_declaration
  141 para_declaration: . declaration_spec declarator
  142                 | . declaration_spec
  143                 | . declaration_spec abstract_declarator
  172 typedef_name: . identifier

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 8
    ellipsis                 shift, and go to state 318

    declaration_spec      转到状态 148
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    para_declaration      转到状态 319
    typedef_name          转到状态 16


State 239

  129 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 129 (direct_declarator)


State 240

  145 identifier_list: identifier_list ',' . identifier

    identifier  shift, and go to state 320


State 241

  123 direct_declarator: direct_declarator '[' STATIC assignment_expr . ']'

    ']'  shift, and go to state 321


State 242

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  124 direct_declarator: direct_declarator '[' STATIC type_qual_list . assignment_expr ']'
  136 type_qual_list: type_qual_list . type_qual

    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 322
    type_qual            转到状态 79


State 243

  126 direct_declarator: direct_declarator '[' '*' ']' .

    $default  reduce using rule 126 (direct_declarator)


State 244

  121 direct_declarator: direct_declarator '[' assignment_expr ']' .

    $default  reduce using rule 121 (direct_declarator)


State 245

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  125 direct_declarator: direct_declarator '[' type_qual_list STATIC . assignment_expr ']'

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 323


State 246

   26 op_unary: '*' .  [SIZEOF, identifier, const_int, const_char, const_float, string_literal, op_pp, op_dd, '+', '-', '*', '(', '&', '~', '!']
  127 direct_declarator: direct_declarator '[' type_qual_list '*' . ']'

    ']'  shift, and go to state 324

    $default  reduce using rule 26 (op_unary)


State 247

  120 direct_declarator: direct_declarator '[' type_qual_list ']' .

    $default  reduce using rule 120 (direct_declarator)


State 248

  122 direct_declarator: direct_declarator '[' type_qual_list assignment_expr . ']'

    ']'  shift, and go to state 325


State 249

  106 enum_spec: ENUM identifier '{' enum_list ',' '}' .

    $default  reduce using rule 106 (enum_spec)


State 250

   99 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 99 (struct_declarator_list)


State 251

  102 struct_declarator: declarator ':' constant_expr .

    $default  reduce using rule 102 (struct_declarator)


State 252

  206 iteration_statement: DO statement WHILE . '(' expr ')' ';'

    '('  shift, and go to state 326


State 253

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  207                    | FOR '(' ')' . statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 327
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 254

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  209 iteration_statement: FOR '(' ';' . expr ';' ')' statement
  210                    | FOR '(' ';' . ';' expr ')' statement
  213                    | FOR '(' ';' . expr ';' expr ')' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 328

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 329


State 255

   66 expr: expr . ',' assignment_expr
  208 iteration_statement: FOR '(' expr . ';' ';' ')' statement
  211                    | FOR '(' expr . ';' expr ';' ')' statement
  212                    | FOR '(' expr . ';' ';' expr ')' statement
  214                    | FOR '(' expr . ';' expr ';' expr ')' statement

    ','  shift, and go to state 220
    ';'  shift, and go to state 330


State 256

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  215 iteration_statement: FOR '(' declaration . ';' ')' statement
  216                    | FOR '(' declaration . expr ';' ')' statement
  217                    | FOR '(' declaration . ';' expr ')' statement
  218                    | FOR '(' declaration . expr ';' expr ')' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 331

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 332


State 257

   66 expr: expr . ',' assignment_expr
  205 iteration_statement: WHILE '(' expr . ')' statement

    ')'  shift, and go to state 333
    ','  shift, and go to state 220


State 258

  219 jump_statement: GOTO identifier ';' .

    $default  reduce using rule 219 (jump_statement)


State 259

  223 jump_statement: RETURN expr ';' .

    $default  reduce using rule 223 (jump_statement)


State 260

   66 expr: expr . ',' assignment_expr
  202 selection_statement: IF '(' expr . ')' statement
  203                    | IF '(' expr . ')' statement ELSE statement

    ')'  shift, and go to state 334
    ','  shift, and go to state 220


State 261

   66 expr: expr . ',' assignment_expr
  204 selection_statement: SWITCH '(' expr . ')' statement

    ')'  shift, and go to state 335
    ','  shift, and go to state 220


State 262

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  192                  | CASE constant_expr ':' . statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 336
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 263

  193 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 193 (labeled_statement)


State 264

   15 postfix_expr: '(' type_name . ')' '{' init_list '}'
   16             | '(' type_name . ')' '{' init_list ',' '}'
   24 unary_expr: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 337


State 265

  191 labeled_statement: identifier ':' statement .

    $default  reduce using rule 191 (labeled_statement)


State 266

   15 postfix_expr: '(' type_name . ')' '{' init_list '}'
   16             | '(' type_name . ')' '{' init_list ',' '}'

    ')'  shift, and go to state 338


State 267

    6 primary_expr: '(' expr ')' .

    $default  reduce using rule 6 (primary_expr)


State 268

   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  131 pointer: . '*'
  132        | . '*' type_qual_list
  133        | . '*' pointer
  134        | . '*' type_qual_list pointer
  137 para_type_list: . para_list
  138               | . para_list ',' ellipsis
  139 para_list: . para_declaration
  140          | . para_list ',' para_declaration
  141 para_declaration: . declaration_spec declarator
  142                 | . declaration_spec
  143                 | . declaration_spec abstract_declarator
  148 abstract_declarator: . pointer
  149                    | . direct_abstract_declarator
  150                    | . pointer direct_abstract_declarator
  151 direct_abstract_declarator: . '(' abstract_declarator ')'
  151                           | '(' . abstract_declarator ')'
  152                           | . '[' ']'
  153                           | . direct_abstract_declarator '[' ']'
  154                           | . '[' type_qual_list ']'
  155                           | . '[' assignment_expr ']'
  156                           | . direct_abstract_declarator '[' type_qual_list ']'
  157                           | . direct_abstract_declarator '[' assignment_expr ']'
  158                           | . '[' type_qual_list assignment_expr ']'
  159                           | . direct_abstract_declarator '[' type_qual_list assignment_expr ']'
  160                           | . '[' STATIC assignment_expr ']'
  161                           | . direct_abstract_declarator '[' STATIC assignment_expr ']'
  162                           | . '[' STATIC type_qual_list assignment_expr ']'
  163                           | . direct_abstract_declarator '[' STATIC type_qual_list assignment_expr ']'
  164                           | . '[' type_qual_list STATIC assignment_expr ']'
  165                           | . direct_abstract_declarator '[' type_qual_list STATIC assignment_expr ']'
  166                           | . '[' '*' ']'
  167                           | . direct_abstract_declarator '[' '*' ']'
  168                           | . direct_abstract_declarator '(' para_type_list ')'
  169                           | . direct_abstract_declarator '(' ')'
  170                           | . '(' para_type_list ')'
  170                           | '(' . para_type_list ')'
  171                           | . '(' ')'
  171                           | '(' . ')'
  172 typedef_name: . identifier

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 8
    '*'                      shift, and go to state 26
    '('                      shift, and go to state 268
    ')'                      shift, and go to state 307
    '['                      shift, and go to state 232

    declaration_spec            转到状态 148
    storage_class_spec          转到状态 11
    type_spec                   转到状态 12
    struct_or_union_spec        转到状态 13
    enum_spec                   转到状态 14
    func_spec                   转到状态 15
    pointer                     转到状态 269
    para_type_list              转到状态 308
    para_list                   转到状态 150
    para_declaration            转到状态 151
    abstract_declarator         转到状态 309
    direct_abstract_declarator  转到状态 236
    typedef_name                转到状态 16


State 269

  148 abstract_declarator: pointer .  [')']
  150                    | pointer . direct_abstract_declarator
  151 direct_abstract_declarator: . '(' abstract_declarator ')'
  152                           | . '[' ']'
  153                           | . direct_abstract_declarator '[' ']'
  154                           | . '[' type_qual_list ']'
  155                           | . '[' assignment_expr ']'
  156                           | . direct_abstract_declarator '[' type_qual_list ']'
  157                           | . direct_abstract_declarator '[' assignment_expr ']'
  158                           | . '[' type_qual_list assignment_expr ']'
  159                           | . direct_abstract_declarator '[' type_qual_list assignment_expr ']'
  160                           | . '[' STATIC assignment_expr ']'
  161                           | . direct_abstract_declarator '[' STATIC assignment_expr ']'
  162                           | . '[' STATIC type_qual_list assignment_expr ']'
  163                           | . direct_abstract_declarator '[' STATIC type_qual_list assignment_expr ']'
  164                           | . '[' type_qual_list STATIC assignment_expr ']'
  165                           | . direct_abstract_declarator '[' type_qual_list STATIC assignment_expr ']'
  166                           | . '[' '*' ']'
  167                           | . direct_abstract_declarator '[' '*' ']'
  168                           | . direct_abstract_declarator '(' para_type_list ')'
  169                           | . direct_abstract_declarator '(' ')'
  170                           | . '(' para_type_list ')'
  171                           | . '(' ')'

    '('  shift, and go to state 268
    '['  shift, and go to state 232

    $default  reduce using rule 148 (abstract_declarator)

    direct_abstract_declarator  转到状态 315


State 270

  147 type_name: spec_qual_list abstract_declarator .

    $default  reduce using rule 147 (type_name)


State 271

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   15             | '(' type_name ')' . '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   16             | '(' type_name ')' . '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   32          | '(' type_name ')' . cast_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 339
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr  转到状态 112
    postfix_expr  转到状态 113
    unary_expr    转到状态 162
    op_unary      转到状态 115
    cast_expr     转到状态 340


State 272

   12 postfix_expr: postfix_expr op_ptr identifier .

    $default  reduce using rule 12 (postfix_expr)


State 273

    9 postfix_expr: postfix_expr '(' ')' .

    $default  reduce using rule 9 (postfix_expr)


State 274

   10 postfix_expr: postfix_expr '(' argument_expr_list . ')'
   18 argument_expr_list: argument_expr_list . ',' assignment_expr

    ')'  shift, and go to state 341
    ','  shift, and go to state 342


State 275

   17 argument_expr_list: assignment_expr .

    $default  reduce using rule 17 (argument_expr_list)


State 276

    8 postfix_expr: postfix_expr '[' expr . ']'
   66 expr: expr . ',' assignment_expr

    ']'  shift, and go to state 343
    ','  shift, and go to state 220


State 277

   11 postfix_expr: postfix_expr '.' identifier .

    $default  reduce using rule 11 (postfix_expr)


State 278

   64 assignment_expr: unary_expr op_assign assignment_expr .

    $default  reduce using rule 64 (assignment_expr)


State 279

   34 multiplicative_expr: multiplicative_expr '*' cast_expr .

    $default  reduce using rule 34 (multiplicative_expr)


State 280

   35 multiplicative_expr: multiplicative_expr '/' cast_expr .

    $default  reduce using rule 35 (multiplicative_expr)


State 281

   36 multiplicative_expr: multiplicative_expr '%' cast_expr .

    $default  reduce using rule 36 (multiplicative_expr)


State 282

   34 multiplicative_expr: multiplicative_expr . '*' cast_expr
   35                    | multiplicative_expr . '/' cast_expr
   36                    | multiplicative_expr . '%' cast_expr
   38 additive_expr: additive_expr '+' multiplicative_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, '<', '>', '+', '-', ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    '*'  shift, and go to state 201
    '/'  shift, and go to state 202
    '%'  shift, and go to state 203

    $default  reduce using rule 38 (additive_expr)


State 283

   34 multiplicative_expr: multiplicative_expr . '*' cast_expr
   35                    | multiplicative_expr . '/' cast_expr
   36                    | multiplicative_expr . '%' cast_expr
   39 additive_expr: additive_expr '-' multiplicative_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, '<', '>', '+', '-', ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    '*'  shift, and go to state 201
    '/'  shift, and go to state 202
    '%'  shift, and go to state 203

    $default  reduce using rule 39 (additive_expr)


State 284

   38 additive_expr: additive_expr . '+' multiplicative_expr
   39              | additive_expr . '-' multiplicative_expr
   41 shift_expr: shift_expr op_lshift additive_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, '<', '>', ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    '+'  shift, and go to state 204
    '-'  shift, and go to state 205

    $default  reduce using rule 41 (shift_expr)


State 285

   38 additive_expr: additive_expr . '+' multiplicative_expr
   39              | additive_expr . '-' multiplicative_expr
   42 shift_expr: shift_expr op_rshift additive_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, '<', '>', ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    '+'  shift, and go to state 204
    '-'  shift, and go to state 205

    $default  reduce using rule 42 (shift_expr)


State 286

   41 shift_expr: shift_expr . op_lshift additive_expr
   42           | shift_expr . op_rshift additive_expr
   46 relational_expr: relational_expr op_le shift_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, '<', '>', ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    op_lshift  shift, and go to state 206
    op_rshift  shift, and go to state 207

    $default  reduce using rule 46 (relational_expr)


State 287

   41 shift_expr: shift_expr . op_lshift additive_expr
   42           | shift_expr . op_rshift additive_expr
   47 relational_expr: relational_expr op_ge shift_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, '<', '>', ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    op_lshift  shift, and go to state 206
    op_rshift  shift, and go to state 207

    $default  reduce using rule 47 (relational_expr)


State 288

   41 shift_expr: shift_expr . op_lshift additive_expr
   42           | shift_expr . op_rshift additive_expr
   44 relational_expr: relational_expr '<' shift_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, '<', '>', ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    op_lshift  shift, and go to state 206
    op_rshift  shift, and go to state 207

    $default  reduce using rule 44 (relational_expr)


State 289

   41 shift_expr: shift_expr . op_lshift additive_expr
   42           | shift_expr . op_rshift additive_expr
   45 relational_expr: relational_expr '>' shift_expr .  [op_and, op_or, op_eq, op_ne, op_le, op_ge, '<', '>', ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    op_lshift  shift, and go to state 206
    op_rshift  shift, and go to state 207

    $default  reduce using rule 45 (relational_expr)


State 290

   44 relational_expr: relational_expr . '<' shift_expr
   45                | relational_expr . '>' shift_expr
   46                | relational_expr . op_le shift_expr
   47                | relational_expr . op_ge shift_expr
   49 equality_expr: equality_expr op_eq relational_expr .  [op_and, op_or, op_eq, op_ne, ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    op_le  shift, and go to state 208
    op_ge  shift, and go to state 209
    '<'    shift, and go to state 210
    '>'    shift, and go to state 211

    $default  reduce using rule 49 (equality_expr)


State 291

   44 relational_expr: relational_expr . '<' shift_expr
   45                | relational_expr . '>' shift_expr
   46                | relational_expr . op_le shift_expr
   47                | relational_expr . op_ge shift_expr
   50 equality_expr: equality_expr op_ne relational_expr .  [op_and, op_or, op_eq, op_ne, ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    op_le  shift, and go to state 208
    op_ge  shift, and go to state 209
    '<'    shift, and go to state 210
    '>'    shift, and go to state 211

    $default  reduce using rule 50 (equality_expr)


State 292

   49 equality_expr: equality_expr . op_eq relational_expr
   50              | equality_expr . op_ne relational_expr
   52 AND_expr: AND_expr '&' equality_expr .  [op_and, op_or, ')', ']', '}', ',', '&', '^', '|', '?', ':', ';']

    op_eq  shift, and go to state 212
    op_ne  shift, and go to state 213

    $default  reduce using rule 52 (AND_expr)


State 293

   52 AND_expr: AND_expr . '&' equality_expr
   54 ex_OR_expr: ex_OR_expr '^' AND_expr .  [op_and, op_or, ')', ']', '}', ',', '^', '|', '?', ':', ';']

    '&'  shift, and go to state 214

    $default  reduce using rule 54 (ex_OR_expr)


State 294

   54 ex_OR_expr: ex_OR_expr . '^' AND_expr
   56 in_OR_expr: in_OR_expr '|' ex_OR_expr .  [op_and, op_or, ')', ']', '}', ',', '|', '?', ':', ';']

    '^'  shift, and go to state 215

    $default  reduce using rule 56 (in_OR_expr)


State 295

   56 in_OR_expr: in_OR_expr . '|' ex_OR_expr
   58 logical_AND_expr: logical_AND_expr op_and in_OR_expr .  [op_and, op_or, ')', ']', '}', ',', '?', ':', ';']

    '|'  shift, and go to state 216

    $default  reduce using rule 58 (logical_AND_expr)


State 296

   58 logical_AND_expr: logical_AND_expr . op_and in_OR_expr
   60 logical_OR_expr: logical_OR_expr op_or logical_AND_expr .  [op_or, ')', ']', '}', ',', '?', ':', ';']

    op_and  shift, and go to state 217

    $default  reduce using rule 60 (logical_OR_expr)


State 297

   62 conditional_expr: logical_OR_expr '?' expr . ':' conditional_expr
   66 expr: expr . ',' assignment_expr

    ','  shift, and go to state 220
    ':'  shift, and go to state 344


State 298

   66 expr: expr ',' assignment_expr .

    $default  reduce using rule 66 (expr)


State 299

  183 designator: '[' constant_expr . ']'

    ']'  shift, and go to state 345


State 300

  184 designator: '.' identifier .

    $default  reduce using rule 184 (designator)


State 301

  174 initializer: '{' init_list '}' .

    $default  reduce using rule 174 (initializer)


State 302

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  173 initializer: . assignment_expr
  174            | . '{' init_list '}'
  175            | . '{' init_list ',' '}'
  175            | '{' init_list ',' . '}'
  178 init_list: init_list ',' . initializer
  179          | init_list ',' . designation initializer
  180 designation: . designator_list '='
  181 designator_list: . designator
  182                | . designator_list designator
  183 designator: . '[' constant_expr ']'
  184           | . '.' identifier

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '['             shift, and go to state 224
    '.'             shift, and go to state 225
    '{'             shift, and go to state 141
    '}'             shift, and go to state 346
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 142
    initializer          转到状态 347
    designation          转到状态 348
    designator_list      转到状态 229
    designator           转到状态 230


State 303

  177 init_list: designation initializer .

    $default  reduce using rule 177 (init_list)


State 304

  180 designation: designator_list '=' .

    $default  reduce using rule 180 (designation)


State 305

  182 designator_list: designator_list designator .

    $default  reduce using rule 182 (designator_list)


State 306

  117 direct_declarator: identifier .  ['(', ')', '[']
  172 typedef_name: identifier .  [INLINE, ENUM, STATIC, type_qualifier, storage_class_specifier, type_specifier, struct_or_union, identifier, '*', '(', ')', '[', ',']

    '('       reduce using rule 117 (direct_declarator)
    '('       [reduce using rule 172 (typedef_name)]
    ')'       reduce using rule 117 (direct_declarator)
    ')'       [reduce using rule 172 (typedef_name)]
    '['       reduce using rule 117 (direct_declarator)
    '['       [reduce using rule 172 (typedef_name)]
    $default  reduce using rule 172 (typedef_name)


State 307

  171 direct_abstract_declarator: '(' ')' .

    $default  reduce using rule 171 (direct_abstract_declarator)


State 308

  170 direct_abstract_declarator: '(' para_type_list . ')'

    ')'  shift, and go to state 349


State 309

  151 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 350


State 310

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  135 type_qual_list: . type_qual
  136               | . type_qual_list type_qual
  160 direct_abstract_declarator: '[' STATIC . assignment_expr ']'
  162                           | '[' STATIC . type_qual_list assignment_expr ']'

    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 351
    type_qual            转到状态 51
    type_qual_list       转到状态 352


State 311

   26 op_unary: '*' .  [SIZEOF, identifier, const_int, const_char, const_float, string_literal, op_pp, op_dd, '+', '-', '*', '(', '&', '~', '!']
  166 direct_abstract_declarator: '[' '*' . ']'

    ']'  shift, and go to state 353

    $default  reduce using rule 26 (op_unary)


State 312

  152 direct_abstract_declarator: '[' ']' .

    $default  reduce using rule 152 (direct_abstract_declarator)


State 313

  155 direct_abstract_declarator: '[' assignment_expr . ']'

    ']'  shift, and go to state 354


State 314

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  136 type_qual_list: type_qual_list . type_qual
  154 direct_abstract_declarator: '[' type_qual_list . ']'
  158                           | '[' type_qual_list . assignment_expr ']'
  164                           | '[' type_qual_list . STATIC assignment_expr ']'

    STATIC          shift, and go to state 355
    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    ']'             shift, and go to state 356
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 357
    type_qual            转到状态 79


State 315

  150 abstract_declarator: pointer direct_abstract_declarator .  [')', ',']
  153 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  156                           | direct_abstract_declarator . '[' type_qual_list ']'
  157                           | direct_abstract_declarator . '[' assignment_expr ']'
  159                           | direct_abstract_declarator . '[' type_qual_list assignment_expr ']'
  161                           | direct_abstract_declarator . '[' STATIC assignment_expr ']'
  163                           | direct_abstract_declarator . '[' STATIC type_qual_list assignment_expr ']'
  165                           | direct_abstract_declarator . '[' type_qual_list STATIC assignment_expr ']'
  167                           | direct_abstract_declarator . '[' '*' ']'
  168                           | direct_abstract_declarator . '(' para_type_list ')'
  169                           | direct_abstract_declarator . '(' ')'

    '('  shift, and go to state 316
    '['  shift, and go to state 317

    $default  reduce using rule 150 (abstract_declarator)


State 316

   70 declaration_spec: . storage_class_spec
   71                 | . storage_class_spec declaration_spec
   72                 | . type_spec
   73                 | . type_spec declaration_spec
   74                 | . type_qualifier
   75                 | . type_qualifier declaration_spec
   76                 | . func_spec
   77                 | . func_spec declaration_spec
   82 storage_class_spec: . STATIC
   83                   | . storage_class_specifier
   84 type_spec: . type_specifier
   85          | . struct_or_union_spec
   86          | . enum_spec
   87          | . typedef_name
   88 struct_or_union_spec: . struct_or_union '{' struct_declaration_list '}'
   89                     | . struct_or_union identifier '{' struct_declaration_list '}'
   90                     | . struct_or_union identifier
  103 enum_spec: . ENUM '{' enum_list '}'
  104          | . ENUM identifier '{' enum_list '}'
  105          | . ENUM '{' enum_list ',' '}'
  106          | . ENUM identifier '{' enum_list ',' '}'
  107          | . ENUM identifier
  114 func_spec: . INLINE
  137 para_type_list: . para_list
  138               | . para_list ',' ellipsis
  139 para_list: . para_declaration
  140          | . para_list ',' para_declaration
  141 para_declaration: . declaration_spec declarator
  142                 | . declaration_spec
  143                 | . declaration_spec abstract_declarator
  168 direct_abstract_declarator: direct_abstract_declarator '(' . para_type_list ')'
  169                           | direct_abstract_declarator '(' . ')'
  172 typedef_name: . identifier

    INLINE                   shift, and go to state 1
    ENUM                     shift, and go to state 2
    STATIC                   shift, and go to state 3
    type_qualifier           shift, and go to state 4
    storage_class_specifier  shift, and go to state 5
    type_specifier           shift, and go to state 6
    struct_or_union          shift, and go to state 7
    identifier               shift, and go to state 8
    ')'                      shift, and go to state 358

    declaration_spec      转到状态 148
    storage_class_spec    转到状态 11
    type_spec             转到状态 12
    struct_or_union_spec  转到状态 13
    enum_spec             转到状态 14
    func_spec             转到状态 15
    para_type_list        转到状态 359
    para_list             转到状态 150
    para_declaration      转到状态 151
    typedef_name          转到状态 16


State 317

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  135 type_qual_list: . type_qual
  136               | . type_qual_list type_qual
  153 direct_abstract_declarator: direct_abstract_declarator '[' . ']'
  156                           | direct_abstract_declarator '[' . type_qual_list ']'
  157                           | direct_abstract_declarator '[' . assignment_expr ']'
  159                           | direct_abstract_declarator '[' . type_qual_list assignment_expr ']'
  161                           | direct_abstract_declarator '[' . STATIC assignment_expr ']'
  163                           | direct_abstract_declarator '[' . STATIC type_qual_list assignment_expr ']'
  165                           | direct_abstract_declarator '[' . type_qual_list STATIC assignment_expr ']'
  167                           | direct_abstract_declarator '[' . '*' ']'

    STATIC          shift, and go to state 360
    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 361
    '('             shift, and go to state 106
    ']'             shift, and go to state 362
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 363
    type_qual            转到状态 51
    type_qual_list       转到状态 364


State 318

  138 para_type_list: para_list ',' ellipsis .

    $default  reduce using rule 138 (para_type_list)


State 319

  140 para_list: para_list ',' para_declaration .

    $default  reduce using rule 140 (para_list)


State 320

  145 identifier_list: identifier_list ',' identifier .

    $default  reduce using rule 145 (identifier_list)


State 321

  123 direct_declarator: direct_declarator '[' STATIC assignment_expr ']' .

    $default  reduce using rule 123 (direct_declarator)


State 322

  124 direct_declarator: direct_declarator '[' STATIC type_qual_list assignment_expr . ']'

    ']'  shift, and go to state 365


State 323

  125 direct_declarator: direct_declarator '[' type_qual_list STATIC assignment_expr . ']'

    ']'  shift, and go to state 366


State 324

  127 direct_declarator: direct_declarator '[' type_qual_list '*' ']' .

    $default  reduce using rule 127 (direct_declarator)


State 325

  122 direct_declarator: direct_declarator '[' type_qual_list assignment_expr ']' .

    $default  reduce using rule 122 (direct_declarator)


State 326

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  206 iteration_statement: DO statement WHILE '(' . expr ')' ';'

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 367


State 327

  207 iteration_statement: FOR '(' ')' statement .

    $default  reduce using rule 207 (iteration_statement)


State 328

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  210 iteration_statement: FOR '(' ';' ';' . expr ')' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 368


State 329

   66 expr: expr . ',' assignment_expr
  209 iteration_statement: FOR '(' ';' expr . ';' ')' statement
  213                    | FOR '(' ';' expr . ';' expr ')' statement

    ','  shift, and go to state 220
    ';'  shift, and go to state 369


State 330

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  208 iteration_statement: FOR '(' expr ';' . ';' ')' statement
  211                    | FOR '(' expr ';' . expr ';' ')' statement
  212                    | FOR '(' expr ';' . ';' expr ')' statement
  214                    | FOR '(' expr ';' . expr ';' expr ')' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 370

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 371


State 331

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  215 iteration_statement: FOR '(' declaration ';' . ')' statement
  217                    | FOR '(' declaration ';' . expr ')' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    ')'             shift, and go to state 372
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 373


State 332

   66 expr: expr . ',' assignment_expr
  216 iteration_statement: FOR '(' declaration expr . ';' ')' statement
  218                    | FOR '(' declaration expr . ';' expr ')' statement

    ','  shift, and go to state 220
    ';'  shift, and go to state 374


State 333

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  205                    | WHILE '(' expr ')' . statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 375
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 334

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  202                    | IF '(' expr ')' . statement
  203                    | . IF '(' expr ')' statement ELSE statement
  203                    | IF '(' expr ')' . statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 376
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 335

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  204                    | SWITCH '(' expr ')' . statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 377
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 336

  192 labeled_statement: CASE constant_expr ':' statement .

    $default  reduce using rule 192 (labeled_statement)


State 337

   15 postfix_expr: '(' type_name ')' . '{' init_list '}'
   16             | '(' type_name ')' . '{' init_list ',' '}'
   24 unary_expr: SIZEOF '(' type_name ')' .  [op_assign, op_and, op_or, op_eq, op_ne, op_le, op_ge, op_lshift, op_rshift, '<', '>', '+', '-', '*', '/', ')', ']', '}', ',', '&', '%', '^', '|', '?', ':', ';']

    '{'  shift, and go to state 339

    $default  reduce using rule 24 (unary_expr)


State 338

   15 postfix_expr: '(' type_name ')' . '{' init_list '}'
   16             | '(' type_name ')' . '{' init_list ',' '}'

    '{'  shift, and go to state 339


State 339

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   15             | '(' type_name ')' '{' . init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   16             | '(' type_name ')' '{' . init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  173 initializer: . assignment_expr
  174            | . '{' init_list '}'
  175            | . '{' init_list ',' '}'
  176 init_list: . initializer
  177          | . designation initializer
  178          | . init_list ',' initializer
  179          | . init_list ',' designation initializer
  180 designation: . designator_list '='
  181 designator_list: . designator
  182                | . designator_list designator
  183 designator: . '[' constant_expr ']'
  184           | . '.' identifier

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '['             shift, and go to state 224
    '.'             shift, and go to state 225
    '{'             shift, and go to state 141
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 142
    initializer          转到状态 226
    init_list            转到状态 378
    designation          转到状态 228
    designator_list      转到状态 229
    designator           转到状态 230


State 340

   32 cast_expr: '(' type_name ')' cast_expr .

    $default  reduce using rule 32 (cast_expr)


State 341

   10 postfix_expr: postfix_expr '(' argument_expr_list ')' .

    $default  reduce using rule 10 (postfix_expr)


State 342

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   18 argument_expr_list: argument_expr_list ',' . assignment_expr
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 379


State 343

    8 postfix_expr: postfix_expr '[' expr ']' .

    $default  reduce using rule 8 (postfix_expr)


State 344

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   62                 | logical_OR_expr '?' expr ':' . conditional_expr

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 162
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 380


State 345

  183 designator: '[' constant_expr ']' .

    $default  reduce using rule 183 (designator)


State 346

  175 initializer: '{' init_list ',' '}' .

    $default  reduce using rule 175 (initializer)


State 347

  178 init_list: init_list ',' initializer .

    $default  reduce using rule 178 (init_list)


State 348

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  173 initializer: . assignment_expr
  174            | . '{' init_list '}'
  175            | . '{' init_list ',' '}'
  179 init_list: init_list ',' designation . initializer

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 141
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 142
    initializer          转到状态 381


State 349

  170 direct_abstract_declarator: '(' para_type_list ')' .

    $default  reduce using rule 170 (direct_abstract_declarator)


State 350

  151 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 151 (direct_abstract_declarator)


State 351

  160 direct_abstract_declarator: '[' STATIC assignment_expr . ']'

    ']'  shift, and go to state 382


State 352

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  136 type_qual_list: type_qual_list . type_qual
  162 direct_abstract_declarator: '[' STATIC type_qual_list . assignment_expr ']'

    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 383
    type_qual            转到状态 79


State 353

  166 direct_abstract_declarator: '[' '*' ']' .

    $default  reduce using rule 166 (direct_abstract_declarator)


State 354

  155 direct_abstract_declarator: '[' assignment_expr ']' .

    $default  reduce using rule 155 (direct_abstract_declarator)


State 355

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  164 direct_abstract_declarator: '[' type_qual_list STATIC . assignment_expr ']'

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 384


State 356

  154 direct_abstract_declarator: '[' type_qual_list ']' .

    $default  reduce using rule 154 (direct_abstract_declarator)


State 357

  158 direct_abstract_declarator: '[' type_qual_list assignment_expr . ']'

    ']'  shift, and go to state 385


State 358

  169 direct_abstract_declarator: direct_abstract_declarator '(' ')' .

    $default  reduce using rule 169 (direct_abstract_declarator)


State 359

  168 direct_abstract_declarator: direct_abstract_declarator '(' para_type_list . ')'

    ')'  shift, and go to state 386


State 360

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  135 type_qual_list: . type_qual
  136               | . type_qual_list type_qual
  161 direct_abstract_declarator: direct_abstract_declarator '[' STATIC . assignment_expr ']'
  163                           | direct_abstract_declarator '[' STATIC . type_qual_list assignment_expr ']'

    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 387
    type_qual            转到状态 51
    type_qual_list       转到状态 388


State 361

   26 op_unary: '*' .  [SIZEOF, identifier, const_int, const_char, const_float, string_literal, op_pp, op_dd, '+', '-', '*', '(', '&', '~', '!']
  167 direct_abstract_declarator: direct_abstract_declarator '[' '*' . ']'

    ']'  shift, and go to state 389

    $default  reduce using rule 26 (op_unary)


State 362

  153 direct_abstract_declarator: direct_abstract_declarator '[' ']' .

    $default  reduce using rule 153 (direct_abstract_declarator)


State 363

  157 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expr . ']'

    ']'  shift, and go to state 390


State 364

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  136 type_qual_list: type_qual_list . type_qual
  156 direct_abstract_declarator: direct_abstract_declarator '[' type_qual_list . ']'
  159                           | direct_abstract_declarator '[' type_qual_list . assignment_expr ']'
  165                           | direct_abstract_declarator '[' type_qual_list . STATIC assignment_expr ']'

    STATIC          shift, and go to state 391
    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    ']'             shift, and go to state 392
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 393
    type_qual            转到状态 79


State 365

  124 direct_declarator: direct_declarator '[' STATIC type_qual_list assignment_expr ']' .

    $default  reduce using rule 124 (direct_declarator)


State 366

  125 direct_declarator: direct_declarator '[' type_qual_list STATIC assignment_expr ']' .

    $default  reduce using rule 125 (direct_declarator)


State 367

   66 expr: expr . ',' assignment_expr
  206 iteration_statement: DO statement WHILE '(' expr . ')' ';'

    ')'  shift, and go to state 394
    ','  shift, and go to state 220


State 368

   66 expr: expr . ',' assignment_expr
  210 iteration_statement: FOR '(' ';' ';' expr . ')' statement

    ')'  shift, and go to state 395
    ','  shift, and go to state 220


State 369

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  209 iteration_statement: FOR '(' ';' expr ';' . ')' statement
  213                    | FOR '(' ';' expr ';' . expr ')' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    ')'             shift, and go to state 396
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 397


State 370

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  208 iteration_statement: FOR '(' expr ';' ';' . ')' statement
  212                    | FOR '(' expr ';' ';' . expr ')' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    ')'             shift, and go to state 398
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 399


State 371

   66 expr: expr . ',' assignment_expr
  211 iteration_statement: FOR '(' expr ';' expr . ';' ')' statement
  214                    | FOR '(' expr ';' expr . ';' expr ')' statement

    ','  shift, and go to state 220
    ';'  shift, and go to state 400


State 372

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  215                    | FOR '(' declaration ';' ')' . statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 401
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 373

   66 expr: expr . ',' assignment_expr
  217 iteration_statement: FOR '(' declaration ';' expr . ')' statement

    ')'  shift, and go to state 402
    ','  shift, and go to state 220


State 374

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  216 iteration_statement: FOR '(' declaration expr ';' . ')' statement
  218                    | FOR '(' declaration expr ';' . expr ')' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    ')'             shift, and go to state 403
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 404


State 375

  205 iteration_statement: WHILE '(' expr ')' statement .

    $default  reduce using rule 205 (iteration_statement)


State 376

  202 selection_statement: IF '(' expr ')' statement .  [INLINE, DO, FOR, WHILE, BREAK, CONTINUE, GOTO, RETURN, IF, ELSE, SWITCH, ENUM, CASE, DEFAULT, STATIC, SIZEOF, type_qualifier, storage_class_specifier, type_specifier, struct_or_union, identifier, const_int, const_char, const_float, string_literal, op_pp, op_dd, '+', '-', '*', '(', '{', '}', '&', '~', '!', ';']
  203                    | IF '(' expr ')' statement . ELSE statement

    ELSE  shift, and go to state 405

    ELSE      [reduce using rule 202 (selection_statement)]
    $default  reduce using rule 202 (selection_statement)


State 377

  204 selection_statement: SWITCH '(' expr ')' statement .

    $default  reduce using rule 204 (selection_statement)


State 378

   15 postfix_expr: '(' type_name ')' '{' init_list . '}'
   16             | '(' type_name ')' '{' init_list . ',' '}'
  178 init_list: init_list . ',' initializer
  179          | init_list . ',' designation initializer

    '}'  shift, and go to state 406
    ','  shift, and go to state 407


State 379

   18 argument_expr_list: argument_expr_list ',' assignment_expr .

    $default  reduce using rule 18 (argument_expr_list)


State 380

   62 conditional_expr: logical_OR_expr '?' expr ':' conditional_expr .

    $default  reduce using rule 62 (conditional_expr)


State 381

  179 init_list: init_list ',' designation initializer .

    $default  reduce using rule 179 (init_list)


State 382

  160 direct_abstract_declarator: '[' STATIC assignment_expr ']' .

    $default  reduce using rule 160 (direct_abstract_declarator)


State 383

  162 direct_abstract_declarator: '[' STATIC type_qual_list assignment_expr . ']'

    ']'  shift, and go to state 408


State 384

  164 direct_abstract_declarator: '[' type_qual_list STATIC assignment_expr . ']'

    ']'  shift, and go to state 409


State 385

  158 direct_abstract_declarator: '[' type_qual_list assignment_expr ']' .

    $default  reduce using rule 158 (direct_abstract_declarator)


State 386

  168 direct_abstract_declarator: direct_abstract_declarator '(' para_type_list ')' .

    $default  reduce using rule 168 (direct_abstract_declarator)


State 387

  161 direct_abstract_declarator: direct_abstract_declarator '[' STATIC assignment_expr . ']'

    ']'  shift, and go to state 410


State 388

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  113 type_qual: . type_qualifier
  136 type_qual_list: type_qual_list . type_qual
  163 direct_abstract_declarator: direct_abstract_declarator '[' STATIC type_qual_list . assignment_expr ']'

    SIZEOF          shift, and go to state 95
    type_qualifier  shift, and go to state 45
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 411
    type_qual            转到状态 79


State 389

  167 direct_abstract_declarator: direct_abstract_declarator '[' '*' ']' .

    $default  reduce using rule 167 (direct_abstract_declarator)


State 390

  157 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expr ']' .

    $default  reduce using rule 157 (direct_abstract_declarator)


State 391

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  165 direct_abstract_declarator: direct_abstract_declarator '[' type_qual_list STATIC . assignment_expr ']'

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 412


State 392

  156 direct_abstract_declarator: direct_abstract_declarator '[' type_qual_list ']' .

    $default  reduce using rule 156 (direct_abstract_declarator)


State 393

  159 direct_abstract_declarator: direct_abstract_declarator '[' type_qual_list assignment_expr . ']'

    ']'  shift, and go to state 413


State 394

  206 iteration_statement: DO statement WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 414


State 395

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  210                    | FOR '(' ';' ';' expr ')' . statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 415
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 396

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  209                    | FOR '(' ';' expr ';' ')' . statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 416
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 397

   66 expr: expr . ',' assignment_expr
  213 iteration_statement: FOR '(' ';' expr ';' expr . ')' statement

    ')'  shift, and go to state 417
    ','  shift, and go to state 220


State 398

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  208                    | FOR '(' expr ';' ';' ')' . statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 418
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 399

   66 expr: expr . ',' assignment_expr
  212 iteration_statement: FOR '(' expr ';' ';' expr . ')' statement

    ')'  shift, and go to state 419
    ','  shift, and go to state 220


State 400

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  211 iteration_statement: FOR '(' expr ';' expr ';' . ')' statement
  214                    | FOR '(' expr ';' expr ';' . expr ')' statement

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    ')'             shift, and go to state 420
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 421


State 401

  215 iteration_statement: FOR '(' declaration ';' ')' statement .

    $default  reduce using rule 215 (iteration_statement)


State 402

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  217                    | FOR '(' declaration ';' expr ')' . statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 422
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 403

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  216                    | FOR '(' declaration expr ';' ')' . statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 423
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 404

   66 expr: expr . ',' assignment_expr
  218 iteration_statement: FOR '(' declaration expr ';' expr . ')' statement

    ')'  shift, and go to state 424
    ','  shift, and go to state 220


State 405

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  203                    | IF '(' expr ')' statement ELSE . statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 425
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 406

   15 postfix_expr: '(' type_name ')' '{' init_list '}' .

    $default  reduce using rule 15 (postfix_expr)


State 407

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   16             | '(' type_name ')' '{' init_list ',' . '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
  173 initializer: . assignment_expr
  174            | . '{' init_list '}'
  175            | . '{' init_list ',' '}'
  178 init_list: init_list ',' . initializer
  179          | init_list ',' . designation initializer
  180 designation: . designator_list '='
  181 designator_list: . designator
  182                | . designator_list designator
  183 designator: . '[' constant_expr ']'
  184           | . '.' identifier

    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 140
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '['             shift, and go to state 224
    '.'             shift, and go to state 225
    '{'             shift, and go to state 141
    '}'             shift, and go to state 426
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 142
    initializer          转到状态 347
    designation          转到状态 348
    designator_list      转到状态 229
    designator           转到状态 230


State 408

  162 direct_abstract_declarator: '[' STATIC type_qual_list assignment_expr ']' .

    $default  reduce using rule 162 (direct_abstract_declarator)


State 409

  164 direct_abstract_declarator: '[' type_qual_list STATIC assignment_expr ']' .

    $default  reduce using rule 164 (direct_abstract_declarator)


State 410

  161 direct_abstract_declarator: direct_abstract_declarator '[' STATIC assignment_expr ']' .

    $default  reduce using rule 161 (direct_abstract_declarator)


State 411

  163 direct_abstract_declarator: direct_abstract_declarator '[' STATIC type_qual_list assignment_expr . ']'

    ']'  shift, and go to state 427


State 412

  165 direct_abstract_declarator: direct_abstract_declarator '[' type_qual_list STATIC assignment_expr . ']'

    ']'  shift, and go to state 428


State 413

  159 direct_abstract_declarator: direct_abstract_declarator '[' type_qual_list assignment_expr ']' .

    $default  reduce using rule 159 (direct_abstract_declarator)


State 414

  206 iteration_statement: DO statement WHILE '(' expr ')' ';' .

    $default  reduce using rule 206 (iteration_statement)


State 415

  210 iteration_statement: FOR '(' ';' ';' expr ')' statement .

    $default  reduce using rule 210 (iteration_statement)


State 416

  209 iteration_statement: FOR '(' ';' expr ';' ')' statement .

    $default  reduce using rule 209 (iteration_statement)


State 417

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  213                    | FOR '(' ';' expr ';' expr ')' . statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 429
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 418

  208 iteration_statement: FOR '(' expr ';' ';' ')' statement .

    $default  reduce using rule 208 (iteration_statement)


State 419

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  212                    | FOR '(' expr ';' ';' expr ')' . statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 430
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 420

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  211                    | FOR '(' expr ';' expr ';' ')' . statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 431
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 421

   66 expr: expr . ',' assignment_expr
  214 iteration_statement: FOR '(' expr ';' expr ';' expr . ')' statement

    ')'  shift, and go to state 432
    ','  shift, and go to state 220


State 422

  217 iteration_statement: FOR '(' declaration ';' expr ')' statement .

    $default  reduce using rule 217 (iteration_statement)


State 423

  216 iteration_statement: FOR '(' declaration expr ';' ')' statement .

    $default  reduce using rule 216 (iteration_statement)


State 424

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  218                    | FOR '(' declaration expr ';' expr ')' . statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 433
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 425

  203 selection_statement: IF '(' expr ')' statement ELSE statement .

    $default  reduce using rule 203 (selection_statement)


State 426

   16 postfix_expr: '(' type_name ')' '{' init_list ',' '}' .

    $default  reduce using rule 16 (postfix_expr)


State 427

  163 direct_abstract_declarator: direct_abstract_declarator '[' STATIC type_qual_list assignment_expr ']' .

    $default  reduce using rule 163 (direct_abstract_declarator)


State 428

  165 direct_abstract_declarator: direct_abstract_declarator '[' type_qual_list STATIC assignment_expr ']' .

    $default  reduce using rule 165 (direct_abstract_declarator)


State 429

  213 iteration_statement: FOR '(' ';' expr ';' expr ')' statement .

    $default  reduce using rule 213 (iteration_statement)


State 430

  212 iteration_statement: FOR '(' expr ';' ';' expr ')' statement .

    $default  reduce using rule 212 (iteration_statement)


State 431

  211 iteration_statement: FOR '(' expr ';' expr ';' ')' statement .

    $default  reduce using rule 211 (iteration_statement)


State 432

    1 primary_expr: . identifier
    2             | . const_int
    3             | . const_char
    4             | . const_float
    5             | . string_literal
    6             | . '(' expr ')'
    7 postfix_expr: . primary_expr
    8             | . postfix_expr '[' expr ']'
    9             | . postfix_expr '(' ')'
   10             | . postfix_expr '(' argument_expr_list ')'
   11             | . postfix_expr '.' identifier
   12             | . postfix_expr op_ptr identifier
   13             | . postfix_expr op_pp
   14             | . postfix_expr op_dd
   15             | . '(' type_name ')' '{' init_list '}'
   16             | . '(' type_name ')' '{' init_list ',' '}'
   19 unary_expr: . postfix_expr
   20           | . op_pp unary_expr
   21           | . op_dd unary_expr
   22           | . op_unary cast_expr
   23           | . SIZEOF unary_expr
   24           | . SIZEOF '(' type_name ')'
   25 op_unary: . '&'
   26         | . '*'
   27         | . '+'
   28         | . '-'
   29         | . '~'
   30         | . '!'
   31 cast_expr: . unary_expr
   32          | . '(' type_name ')' cast_expr
   33 multiplicative_expr: . cast_expr
   34                    | . multiplicative_expr '*' cast_expr
   35                    | . multiplicative_expr '/' cast_expr
   36                    | . multiplicative_expr '%' cast_expr
   37 additive_expr: . multiplicative_expr
   38              | . additive_expr '+' multiplicative_expr
   39              | . additive_expr '-' multiplicative_expr
   40 shift_expr: . additive_expr
   41           | . shift_expr op_lshift additive_expr
   42           | . shift_expr op_rshift additive_expr
   43 relational_expr: . shift_expr
   44                | . relational_expr '<' shift_expr
   45                | . relational_expr '>' shift_expr
   46                | . relational_expr op_le shift_expr
   47                | . relational_expr op_ge shift_expr
   48 equality_expr: . relational_expr
   49              | . equality_expr op_eq relational_expr
   50              | . equality_expr op_ne relational_expr
   51 AND_expr: . equality_expr
   52         | . AND_expr '&' equality_expr
   53 ex_OR_expr: . AND_expr
   54           | . ex_OR_expr '^' AND_expr
   55 in_OR_expr: . ex_OR_expr
   56           | . in_OR_expr '|' ex_OR_expr
   57 logical_AND_expr: . in_OR_expr
   58                 | . logical_AND_expr op_and in_OR_expr
   59 logical_OR_expr: . logical_AND_expr
   60                | . logical_OR_expr op_or logical_AND_expr
   61 conditional_expr: . logical_OR_expr
   62                 | . logical_OR_expr '?' expr ':' conditional_expr
   63 assignment_expr: . conditional_expr
   64                | . unary_expr op_assign assignment_expr
   65 expr: . assignment_expr
   66     | . expr ',' assignment_expr
  185 statement: . labeled_statement
  186          | . compound_statement
  187          | . expr_statement
  188          | . selection_statement
  189          | . iteration_statement
  190          | . jump_statement
  191 labeled_statement: . identifier ':' statement
  192                  | . CASE constant_expr ':' statement
  193                  | . DEFAULT ':' statement
  194 compound_statement: . '{' '}'
  195                   | . '{' block_item_list '}'
  200 expr_statement: . ';'
  201               | . expr ';'
  202 selection_statement: . IF '(' expr ')' statement
  203                    | . IF '(' expr ')' statement ELSE statement
  204                    | . SWITCH '(' expr ')' statement
  205 iteration_statement: . WHILE '(' expr ')' statement
  206                    | . DO statement WHILE '(' expr ')' ';'
  207                    | . FOR '(' ')' statement
  208                    | . FOR '(' expr ';' ';' ')' statement
  209                    | . FOR '(' ';' expr ';' ')' statement
  210                    | . FOR '(' ';' ';' expr ')' statement
  211                    | . FOR '(' expr ';' expr ';' ')' statement
  212                    | . FOR '(' expr ';' ';' expr ')' statement
  213                    | . FOR '(' ';' expr ';' expr ')' statement
  214                    | . FOR '(' expr ';' expr ';' expr ')' statement
  214                    | FOR '(' expr ';' expr ';' expr ')' . statement
  215                    | . FOR '(' declaration ';' ')' statement
  216                    | . FOR '(' declaration expr ';' ')' statement
  217                    | . FOR '(' declaration ';' expr ')' statement
  218                    | . FOR '(' declaration expr ';' expr ')' statement
  219 jump_statement: . GOTO identifier ';'
  220               | . CONTINUE ';'
  221               | . BREAK ';'
  222               | . RETURN ';'
  223               | . RETURN expr ';'

    DO              shift, and go to state 84
    FOR             shift, and go to state 85
    WHILE           shift, and go to state 86
    BREAK           shift, and go to state 87
    CONTINUE        shift, and go to state 88
    GOTO            shift, and go to state 89
    RETURN          shift, and go to state 90
    IF              shift, and go to state 91
    SWITCH          shift, and go to state 92
    CASE            shift, and go to state 93
    DEFAULT         shift, and go to state 94
    SIZEOF          shift, and go to state 95
    identifier      shift, and go to state 170
    const_int       shift, and go to state 97
    const_char      shift, and go to state 98
    const_float     shift, and go to state 99
    string_literal  shift, and go to state 100
    op_pp           shift, and go to state 101
    op_dd           shift, and go to state 102
    '+'             shift, and go to state 103
    '-'             shift, and go to state 104
    '*'             shift, and go to state 105
    '('             shift, and go to state 106
    '{'             shift, and go to state 57
    '&'             shift, and go to state 108
    '~'             shift, and go to state 109
    '!'             shift, and go to state 110
    ';'             shift, and go to state 111

    primary_expr         转到状态 112
    postfix_expr         转到状态 113
    unary_expr           转到状态 114
    op_unary             转到状态 115
    cast_expr            转到状态 116
    multiplicative_expr  转到状态 117
    additive_expr        转到状态 118
    shift_expr           转到状态 119
    relational_expr      转到状态 120
    equality_expr        转到状态 121
    AND_expr             转到状态 122
    ex_OR_expr           转到状态 123
    in_OR_expr           转到状态 124
    logical_AND_expr     转到状态 125
    logical_OR_expr      转到状态 126
    conditional_expr     转到状态 127
    assignment_expr      转到状态 128
    expr                 转到状态 129
    statement            转到状态 434
    labeled_statement    转到状态 132
    compound_statement   转到状态 133
    expr_statement       转到状态 136
    selection_statement  转到状态 137
    iteration_statement  转到状态 138
    jump_statement       转到状态 139


State 433

  218 iteration_statement: FOR '(' declaration expr ';' expr ')' statement .

    $default  reduce using rule 218 (iteration_statement)


State 434

  214 iteration_statement: FOR '(' expr ';' expr ';' expr ')' statement .

    $default  reduce using rule 214 (iteration_statement)
